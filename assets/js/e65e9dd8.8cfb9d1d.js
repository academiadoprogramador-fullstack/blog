"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8651],{8453:(r,o,e)=>{e.d(o,{R:()=>s,x:()=>t});var a=e(6540);const n={},i=a.createContext(n);function s(r){const o=a.useContext(i);return a.useMemo((function(){return"function"==typeof r?r(o):{...o,...r}}),[o,r])}function t(r){let o;return o=r.disableParentContext?"function"==typeof r.components?r.components(n):r.components||n:s(r.components),a.createElement(i.Provider,{value:o},r.children)}},9244:(r,o,e)=>{e.r(o),e.d(o,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"Cronograma das Aulas/Semana 03/Aula 11/Classes Est\xe1ticas","title":"Classes Est\xe1ticas","description":"Programa\xe7\xe3o Estruturada com m\xe9todos e classes","source":"@site/docs/Cronograma das Aulas/Semana 03/Aula 11/01. Classes Est\xe1ticas.mdx","sourceDirName":"Cronograma das Aulas/Semana 03/Aula 11","slug":"/Cronograma das Aulas/Semana 03/Aula 11/Classes Est\xe1ticas","permalink":"/blog/docs/Cronograma das Aulas/Semana 03/Aula 11/Classes Est\xe1ticas","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Aula 10","permalink":"/blog/docs/Cronograma das Aulas/Semana 02/Aula 10/"},"next":{"title":"Classifica\xe7\xe3o de Tri\xe2ngulos","permalink":"/blog/docs/Cronograma das Aulas/Semana 03/Aula 12/Classifica\xe7\xe3o de Tri\xe2ngulos"}}');var n=e(4848),i=e(8453);const s={},t=void 0,c={},l=[{value:"Programa\xe7\xe3o Estruturada com m\xe9todos e classes",id:"programa\xe7\xe3o-estruturada-com-m\xe9todos-e-classes",level:3},{value:"Classe Calculadora",id:"classe-calculadora",level:4},{value:"Atributos Est\xe1ticos",id:"atributos-est\xe1ticos",level:4},{value:"C\xf3digo completo",id:"c\xf3digo-completo",level:4},{value:"Utiliza\xe7\xe3o da classe est\xe1tica Calculadora",id:"utiliza\xe7\xe3o-da-classe-est\xe1tica-calculadora",level:4}];function d(r){const o={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...r.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h3,{id:"programa\xe7\xe3o-estruturada-com-m\xe9todos-e-classes",children:"Programa\xe7\xe3o Estruturada com m\xe9todos e classes"}),"\n",(0,n.jsx)(o.h4,{id:"classe-calculadora",children:"Classe Calculadora"}),"\n",(0,n.jsxs)(o.p,{children:["Em C#, uma ",(0,n.jsx)(o.strong,{children:"classe est\xe1tica"})," \xe9 uma classe que n\xe3o pode ser instanciada. Isso significa que todos os m\xe9todos e atributos pertencem \xe0 pr\xf3pria classe e n\xe3o a inst\xe2ncias dela. As classes est\xe1ticas s\xe3o \xfateis quando queremos criar um conjunto de m\xe9todos utilit\xe1rios ou armazenar dados globais relacionados a um determinado contexto."]}),"\n",(0,n.jsxs)(o.p,{children:["A classe ",(0,n.jsx)(o.code,{children:"Calculadora"})," exemplifica bem o conceito de uma classe est\xe1tica:"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"public static class Calculadora\n"})}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:["O modificador ",(0,n.jsx)(o.code,{children:"static"})," indica que essa classe n\xe3o pode ser instanciada."]}),"\n"]}),"\n",(0,n.jsx)(o.h4,{id:"atributos-est\xe1ticos",children:"Atributos Est\xe1ticos"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:"static string[] historicoOperacoes = new string[100];\r\nstatic int contadorHistorico = 0;\n"})}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsxs)(o.li,{children:["Ambos s\xe3o ",(0,n.jsx)(o.code,{children:"static"}),", pois pertencem \xe0 classe e s\xe3o compartilhados entre todas as chamadas aos m\xe9todos."]}),"\n"]}),"\n",(0,n.jsx)(o.h4,{id:"c\xf3digo-completo",children:"C\xf3digo completo"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'public static class Calculadora\r\n{\r\n    static string[] historicoOperacoes = new string[100];\r\n    static int contadorHistorico = 0;\r\n\r\n    public static decimal Somar(decimal primeiroNumero, decimal segundoNumero)\r\n    {\r\n        decimal resultado = primeiroNumero + segundoNumero;\r\n\r\n        historicoOperacoes[contadorHistorico] = $"{primeiroNumero} + {segundoNumero} = {resultado}";\r\n\r\n        contadorHistorico++;\r\n\r\n        return resultado;\r\n    }\r\n\r\n    public static decimal Subtrair(decimal primeiroNumero, decimal segundoNumero)\r\n    {\r\n        decimal resultado = primeiroNumero - segundoNumero;\r\n\r\n        historicoOperacoes[contadorHistorico] = $"{primeiroNumero} - {segundoNumero} = {resultado}";\r\n\r\n        contadorHistorico++;\r\n\r\n        return resultado;\r\n    }\r\n\r\n    public static decimal Multiplicar(decimal primeiroNumero, decimal segundoNumero)\r\n    {\r\n        decimal resultado = primeiroNumero * segundoNumero;\r\n\r\n        historicoOperacoes[contadorHistorico] = $"{primeiroNumero} * {segundoNumero} = {resultado}";\r\n\r\n        contadorHistorico++;\r\n\r\n        return resultado;\r\n    }\r\n\r\n    public static decimal Dividir(decimal primeiroNumero, decimal segundoNumero)\r\n    {\r\n        decimal resultado = primeiroNumero / segundoNumero;\r\n\r\n        historicoOperacoes[contadorHistorico] = $"{primeiroNumero} / {segundoNumero} = {resultado}";\r\n\r\n        contadorHistorico++;\r\n\r\n        return resultado;\r\n    }\r\n\r\n    public static string[] GerarTabuada(int numeroTabuada)\r\n    {\r\n        string[] linhasTabuada = new string[10];\r\n\r\n        for (int contador = 1; contador <= 10; contador++)\r\n        {\r\n            int resultadoTabuada = numeroTabuada * contador;\r\n\r\n            linhasTabuada[contador - 1] = $"{numeroTabuada} x {contador} = {resultadoTabuada}";\r\n        }\r\n\r\n        return linhasTabuada;\r\n    }\r\n\r\n    public static string[] ObterHistoricoOperacoes()\r\n    {\r\n        return historicoOperacoes;\r\n    }\r\n}\n'})}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.code,{children:"Calculadora.cs"})}),"\n",(0,n.jsx)(o.h4,{id:"utiliza\xe7\xe3o-da-classe-est\xe1tica-calculadora",children:"Utiliza\xe7\xe3o da classe est\xe1tica Calculadora"}),"\n",(0,n.jsxs)(o.p,{children:["O c\xf3digo da classe ",(0,n.jsx)(o.code,{children:"Program"})," implementa o menu interativo para o usu\xe1rio realizar opera\xe7\xf5es matem\xe1ticas utilizando a classe est\xe1tica ",(0,n.jsx)(o.code,{children:"Calculadora"}),"."]}),"\n",(0,n.jsxs)(o.p,{children:["Dessa forma, separamos as responsabilidades do c\xf3digo de intera\xe7\xe3o com o usu\xe1rio (",(0,n.jsx)(o.code,{children:"Program.cs"}),") e c\xe1lculo dos n\xfameros recebidos e armazenamento do hist\xf3rico de opera\xe7\xf5es (",(0,n.jsx)(o.code,{children:"Calculadora.cs"}),")."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-cs",children:'static void Main(string[] args)\r\n{\r\n    while (true)\r\n    {\r\n        string opcaoSelecionada = MostrarMenu();\r\n\r\n        if (OpcaoSaidaSelecionada(opcaoSelecionada))\r\n            break;\r\n\r\n        else if (OpcaoTabuadaSelecionada(opcaoSelecionada))\r\n            ExibirTabuada();\r\n\r\n        else if (OpcaoHistoricoSelecionada(opcaoSelecionada))\r\n            ExibirHistoricoOperacoes();\r\n\r\n        else if (OpcaoInvalida(opcaoSelecionada))\r\n            ExibirMensagemErro();\r\n\r\n        else\r\n            ExibirResultado(RealizarCalculo(opcaoSelecionada));\r\n    }\r\n}\r\n\r\nstatic string MostrarMenu()\r\n{\r\n    Console.Clear();\r\n    Console.WriteLine("--------------------------------");\r\n    Console.WriteLine("Calculadora Tabajara 2025");\r\n    Console.WriteLine("--------------------------------");\r\n\r\n    Console.WriteLine("1 - Somar");\r\n    Console.WriteLine("2 - Subtrair");\r\n    Console.WriteLine("3 - Multiplica\xe7\xe3o");\r\n    Console.WriteLine("4 - Divis\xe3o");\r\n    Console.WriteLine("5 - Tabuada");\r\n    Console.WriteLine("6 - Hist\xf3rico de Opera\xe7\xf5es");\r\n    Console.WriteLine("S - Sair");\r\n\r\n    string opcaoSelecionada = Console.ReadLine()!.ToUpper();\r\n\r\n    return opcaoSelecionada;\r\n}\r\n\r\nstatic bool OpcaoSaidaSelecionada(string opcao)\r\n{\r\n    bool opcaoSaidaSelecionada = opcao == "S";\r\n\r\n    return opcaoSaidaSelecionada;\r\n}\r\n\r\nstatic bool OpcaoTabuadaSelecionada(string opcao)\r\n{\r\n    return opcao == "5";\r\n}\r\n\r\nstatic bool OpcaoHistoricoSelecionada(string opcao)\r\n{\r\n    return opcao == "6";\r\n}\r\n\r\nstatic bool OpcaoInvalida(string opcao)\r\n{\r\n    bool opcaoInvalida = \r\n        opcao != "1" &&\r\n        opcao != "2" &&\r\n        opcao != "3" &&\r\n        opcao != "4" &&\r\n        opcao != "5" &&\r\n        opcao != "6" &&\r\n        opcao != "S";\r\n\r\n    return opcaoInvalida;\r\n}\r\n\r\nstatic void ExibirMensagemErro()\r\n{\r\n    Console.WriteLine("Opera\xe7\xe3o inv\xe1lida, tente novamente...");\r\n    Console.ReadLine();\r\n}\r\n\r\nstatic decimal RealizarCalculo(string operacao)\r\n{\r\n    Console.WriteLine("Digite o primeiro n\xfamero:");\r\n    decimal primeiroNumero = Convert.ToDecimal(Console.ReadLine());\r\n\r\n    Console.WriteLine("Digite o segundo n\xfamero:");\r\n    decimal segundoNumero = Convert.ToDecimal(Console.ReadLine());\r\n\r\n    decimal resultado = 0;\r\n\r\n    switch (operacao)\r\n    {\r\n        case "1":\r\n            resultado = Calculadora.Somar(primeiroNumero, segundoNumero);\r\n            break;\r\n\r\n        case "2":\r\n            resultado = Calculadora.Subtrair(primeiroNumero, segundoNumero);\r\n            break;\r\n\r\n        case "3":\r\n            resultado = Calculadora.Multiplicar(primeiroNumero, segundoNumero);\r\n            break;\r\n\r\n        case "4":\r\n            while (segundoNumero == 0)\r\n            {\r\n                Console.Write("N\xe3o \xe9 poss\xedvel dividir por 0\\n Digite o segundo n\xfamero novamente -> ");\r\n\r\n                segundoNumero = Convert.ToDecimal(Console.ReadLine());\r\n            }\r\n\r\n            resultado = Calculadora.Dividir(primeiroNumero, segundoNumero);\r\n            break;\r\n    }\r\n\r\n    return resultado;\r\n}\r\n\r\nstatic void ExibirResultado(decimal resultado)\r\n{\r\n    Console.WriteLine("O resultado \xe9: " + resultado.ToString("F2"));\r\n\r\n    Console.ReadLine();\r\n}\r\n\r\nstatic void ExibirTabuada()\r\n{\r\n    Console.WriteLine("--------------------------------");\r\n    Console.WriteLine("Tabuada");\r\n    Console.WriteLine("--------------------------------");\r\n\r\n    Console.Write("Digite o n\xfamero: ");\r\n    int numeroTabuada = Convert.ToInt32(Console.ReadLine());\r\n\r\n    string[] linhasTabuada = Calculadora.GerarTabuada(numeroTabuada);\r\n\r\n    for (int contador = 0; contador < linhasTabuada.Length; contador++)\r\n        Console.WriteLine(linhasTabuada[contador]);\r\n\r\n    Console.WriteLine("--------------------------------");\r\n    Console.Write("Aperte ENTER para continuar");\r\n    Console.ReadLine();\r\n}\r\n\r\nstatic void ExibirHistoricoOperacoes()\r\n{\r\n    Console.WriteLine("--------------------------------");\r\n    Console.WriteLine("Hist\xf3rico de Opera\xe7\xf5es");\r\n    Console.WriteLine("--------------------------------");\r\n\r\n    string[] historicoOperacoes = Calculadora.ObterHistoricoOperacoes();\r\n\r\n    for (int contador = 0; contador < historicoOperacoes.Length; contador++)\r\n    {\r\n        string valorAtual = historicoOperacoes[contador];\r\n\r\n        if (valorAtual != null)\r\n            Console.WriteLine(valorAtual);\r\n    }\r\n\r\n    Console.WriteLine("--------------------------------");\r\n    Console.Write("Aperte ENTER para continuar");\r\n    Console.ReadLine();\r\n}\n'})}),"\n",(0,n.jsx)(o.p,{children:(0,n.jsx)(o.code,{children:"Program.cs"})})]})}function u(r={}){const{wrapper:o}={...(0,i.R)(),...r.components};return o?(0,n.jsx)(o,{...r,children:(0,n.jsx)(d,{...r})}):d(r)}}}]);