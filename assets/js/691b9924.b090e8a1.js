"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[425],{2366:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>t,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"Cronograma das Aulas/Semana 05/Aula 24/Modelo de Tr\xeas Camadas","title":"Modelo de Tr\xeas Camadas","description":"Introdu\xe7\xe3o","source":"@site/docs/Cronograma das Aulas/Semana 05/Aula 24/01. Modelo de Tr\xeas Camadas.mdx","sourceDirName":"Cronograma das Aulas/Semana 05/Aula 24","slug":"/Cronograma das Aulas/Semana 05/Aula 24/Modelo de Tr\xeas Camadas","permalink":"/blog/docs/Cronograma das Aulas/Semana 05/Aula 24/Modelo de Tr\xeas Camadas","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Aula 23","permalink":"/blog/docs/Cronograma das Aulas/Semana 05/Aula 23/"},"next":{"title":"Aula 25","permalink":"/blog/docs/Cronograma das Aulas/Semana 05/Aula 25/"}}');var i=n(4848),s=n(8453);const r={},t=void 0,d={},c=[{value:"Introdu\xe7\xe3o",id:"introdu\xe7\xe3o",level:2},{value:"Camada de apresenta\xe7\xe3o",id:"camada-de-apresenta\xe7\xe3o",level:3},{value:"Camada de neg\xf3cio",id:"camada-de-neg\xf3cio",level:3},{value:"Camada de Dados",id:"camada-de-dados",level:3},{value:"Implementa\xe7\xe3o",id:"implementa\xe7\xe3o",level:2},{value:"Implementa\xe7\xe3o da Camada de Apresenta\xe7\xe3o",id:"implementa\xe7\xe3o-da-camada-de-apresenta\xe7\xe3o",level:2},{value:"Implementa\xe7\xe3o da Camada de Dados",id:"implementa\xe7\xe3o-da-camada-de-dados",level:2},{value:"Implementa\xe7\xe3o da Camada de Neg\xf3cio",id:"implementa\xe7\xe3o-da-camada-de-neg\xf3cio",level:2},{value:"Classes utilit\xe1rias",id:"classes-utilit\xe1rias",level:2}];function l(e){const a={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h2,{id:"introdu\xe7\xe3o",children:"Introdu\xe7\xe3o"}),"\n",(0,i.jsx)(a.p,{children:"![[s-05-fig-01.png]]"}),"\n",(0,i.jsxs)(a.p,{children:["O modelo de ",(0,i.jsx)(a.strong,{children:"tr\xeas camadas"})," \xe9 uma arquitetura amplamente utilizada para organizar o c\xf3digo de uma aplica\xe7\xe3o, separando responsabilidades em tr\xeas n\xedveis distintos: ",(0,i.jsx)(a.strong,{children:"Camada de Apresenta\xe7\xe3o"}),", ",(0,i.jsx)(a.strong,{children:"Camada de Neg\xf3cio"})," e ",(0,i.jsx)(a.strong,{children:"Camada de Dados"}),". Essa separa\xe7\xe3o melhora a ",(0,i.jsx)(a.strong,{children:"manuten\xe7\xe3o"}),", ",(0,i.jsx)(a.strong,{children:"escalabilidade"})," e ",(0,i.jsx)(a.strong,{children:"testabilidade"})," da aplica\xe7\xe3o."]}),"\n",(0,i.jsxs)(a.p,{children:["No projeto ",(0,i.jsx)(a.strong,{children:"Gest\xe3o de Equipamentos"}),", essa estrutura pode ser identificada da seguinte forma:"]}),"\n",(0,i.jsx)(a.h3,{id:"camada-de-apresenta\xe7\xe3o",children:"Camada de apresenta\xe7\xe3o"}),"\n",(0,i.jsxs)(a.p,{children:["\xc9 a chamada\xa0",(0,i.jsx)(a.a,{href:"https://pt.wikipedia.org/wiki/Interface_gr%C3%A1fica_do_utilizador",title:"Interface gr\xe1fica do utilizador",children:"GUI"}),"\xa0(Graphical User Interface), ou simplesmente interface. Esta camada interage diretamente com o usu\xe1rio, \xe9 atrav\xe9s dela que s\xe3o feitas as requisi\xe7\xf5es como consultas, por exemplo."]}),"\n",(0,i.jsx)(a.h3,{id:"camada-de-neg\xf3cio",children:"Camada de neg\xf3cio"}),"\n",(0,i.jsxs)(a.p,{children:["Tamb\xe9m chamada de l\xf3gica empresarial,\xa0",(0,i.jsx)(a.a,{href:"https://pt.wikipedia.org/wiki/Regras_de_neg%C3%B3cio",title:"Regras de neg\xf3cio",children:"regras de neg\xf3cio"}),"\xa0ou funcionalidade. \xc9 nela que ficam as fun\xe7\xf5es e regras de todo o neg\xf3cio. N\xe3o existe uma interface para o usu\xe1rio e seus dados s\xe3o vol\xe1teis, ou seja, para que algum dado seja mantido deve ser utilizada a camada de dados."]}),"\n",(0,i.jsx)(a.h3,{id:"camada-de-dados",children:"Camada de Dados"}),"\n",(0,i.jsxs)(a.p,{children:["\xc9 composta pelo\xa0",(0,i.jsx)(a.a,{href:"https://pt.wikipedia.org/wiki/Reposit%C3%B3rio",title:"Reposit\xf3rio",children:"reposit\xf3rio"}),"\xa0das informa\xe7\xf5es e as classes que as manipulam. Esta camada recebe as requisi\xe7\xf5es da camada de neg\xf3cios e seus m\xe9todos executam essas requisi\xe7\xf5es em um\xa0",(0,i.jsx)(a.a,{href:"https://pt.wikipedia.org/wiki/Banco_de_dados",title:"Banco de dados",children:"banco de dados"}),". Uma altera\xe7\xe3o no banco de dados alteraria apenas as classes da camada de dados, mas o restante da arquitetura n\xe3o seria afetado por essa altera\xe7\xe3o."]}),"\n",(0,i.jsx)(a.h2,{id:"implementa\xe7\xe3o",children:"Implementa\xe7\xe3o"}),"\n",(0,i.jsx)(a.p,{children:"Primeiro implementamos um loop interativo que permite ao usu\xe1rio navegar por menus e executar opera\xe7\xf5es relacionadas ao cadastro de equipamentos."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-cs",children:"static void Main(string[] args)\n{\n    TelaEquipamento telaEquipamento = new TelaEquipamento();\n\n    bool opcaoSairEscolhida = false;\n\n    while (!opcaoSairEscolhida)\n    {\n        char opcaoPrincipalEscolhida = Menu.ApresentarMenuPrincipal();\n        char operacaoEscolhida;\n\n        switch (opcaoPrincipalEscolhida)\n        {\n            case '1':\n                operacaoEscolhida = telaEquipamento.ApresentarMenu();\n\n                if (operacaoEscolhida == 'S' || operacaoEscolhida == 's')\n                    break;\n\n                if (operacaoEscolhida == '1')\n                    telaEquipamento.CadastrarEquipamento();\n\n                else if (operacaoEscolhida == '2')\n                    telaEquipamento.EditarEquipamento();\n\n                else if (operacaoEscolhida == '3')\n                    telaEquipamento.ExcluirEquipamento();\n\n                else if (operacaoEscolhida == '4')\n                    telaEquipamento.VisualizarEquipamentos(true);\n\n                break;\n\n            default: opcaoSairEscolhida = true; break;\n        }\n    }\n\n    Console.ReadLine();\n}\n"})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"Program.cs"})}),"\n",(0,i.jsx)(a.h2,{id:"implementa\xe7\xe3o-da-camada-de-apresenta\xe7\xe3o",children:"Implementa\xe7\xe3o da Camada de Apresenta\xe7\xe3o"}),"\n",(0,i.jsxs)(a.p,{children:["Esse c\xf3digo define a classe ",(0,i.jsx)(a.code,{children:"TelaEquipamento"}),", que serve como a interface de intera\xe7\xe3o entre o usu\xe1rio e o sistema de gerenciamento de equipamentos. A classe cont\xe9m m\xe9todos para exibir menus, cadastrar, editar, excluir e visualizar equipamentos."]}),"\n",(0,i.jsxs)(a.p,{children:["A ",(0,i.jsx)(a.code,{children:"TelaEquipamento"})," possui um atributo chamado ",(0,i.jsx)(a.code,{children:"repositorio"}),", que \xe9 uma inst\xe2ncia da classe ",(0,i.jsx)(a.code,{children:"RepositorioEquipamento"}),". Esse reposit\xf3rio \xe9 respons\xe1vel por armazenar e manipular os dados dos equipamentos."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-cs",children:'public class TelaEquipamento\n{\n    public RepositorioEquipamento repositorio = new RepositorioEquipamento();\n\n    public char ApresentarMenu()\n    {\n        Menu.ExibirCabecalho();\n\n        Console.WriteLine("1 - Cadastrar Equipamento");\n        Console.WriteLine("2 - Editar Equipamento");\n        Console.WriteLine("3 - Excluir Equipamento");\n        Console.WriteLine("4 - Visualizar Equipamentos");\n\n        Console.WriteLine("S - Voltar");\n\n        Console.WriteLine();\n\n        Console.Write("Escolha uma das op\xe7\xf5es: ");\n        char operacaoEscolhida = Convert.ToChar(Console.ReadLine());\n\n        return operacaoEscolhida;\n    }\n\n    public void CadastrarEquipamento()\n    {\n        Menu.ExibirCabecalho();\n\n        Console.WriteLine("Cadastrando Equipamento...");\n\n        Console.WriteLine();\n\n        Console.Write("Digite o nome do equipamento: ");\n        string nome = Console.ReadLine();\n\n        Console.Write("Digite o nome do fabricante do equipamento: ");\n        string fabricante = Console.ReadLine();\n\n        Console.Write("Digite o pre\xe7o de aquisi\xe7\xe3o do equipamento: R$ ");\n        decimal precoAquisicao = Convert.ToDecimal(Console.ReadLine());\n\n        Console.Write("Digite a data de fabrica\xe7\xe3o do equipamento (formato: dd/MM/aaaa): ");\n        DateTime dataFabricacao = Convert.ToDateTime(Console.ReadLine());\n\n        Equipamento equipamento = new Equipamento(nome, fabricante, precoAquisicao, dataFabricacao);\n\n        repositorio.CadastrarEquipamento(equipamento);\n\n        Notificador.ExibirMensagem("O equipamento foi cadastrado com sucesso!", ConsoleColor.Green);\n    }\n\n    public void EditarEquipamento()\n    {\n        Menu.ExibirCabecalho();\n\n        Console.WriteLine("Editando Equipamento...");\n\n        Console.WriteLine();\n\n        VisualizarEquipamentos(false);\n\n        Console.Write("Digite o ID do equipamento que deseja editar: ");\n        int idEquipamentoEscolhido = Convert.ToInt32(Console.ReadLine());\n\n        if (!repositorio.ExisteEquipamento(idEquipamentoEscolhido))\n        {\n            Notificador.ExibirMensagem("O equipamento mencionado n\xe3o existe!", ConsoleColor.DarkYellow);\n            return;\n        }\n\n        Console.WriteLine();\n\n        Console.Write("Digite o nome do equipamento: ");\n        string nome = Console.ReadLine();\n\n        Console.Write("Digite o nome do fabricante do equipamento: ");\n        string fabricante = Console.ReadLine();\n\n        Console.Write("Digite o pre\xe7o de aquisi\xe7\xe3o do equipamento: R$ ");\n        decimal precoAquisicao = Convert.ToDecimal(Console.ReadLine());\n\n        Console.Write("Digite a data de fabrica\xe7\xe3o do equipamento (formato: dd-MM-aaaa): ");\n        DateTime dataFabricacao = Convert.ToDateTime(Console.ReadLine());\n\n        Equipamento novoEquipamento = new Equipamento(nome, fabricante, precoAquisicao, dataFabricacao);\n\n        bool conseguiuEditar = repositorio.EditarEquipamento(idEquipamentoEscolhido, novoEquipamento);\n\n        if (!conseguiuEditar)\n        {\n            Notificador.ExibirMensagem("Houve um erro durante a edi\xe7\xe3o de equipamento...", ConsoleColor.Red);\n            return;\n        }\n\n        Notificador.ExibirMensagem("O equipamento foi editado com sucesso!", ConsoleColor.Green);\n    }\n\n    public void ExcluirEquipamento()\n    {\n        Menu.ExibirCabecalho();\n\n        Console.WriteLine("Excluindo Equipamento...");\n\n        Console.WriteLine();\n\n        VisualizarEquipamentos(false);\n\n        Console.Write("Digite o ID do equipamento que deseja excluir: ");\n        int idEquipamentoEscolhido = Convert.ToInt32(Console.ReadLine());\n\n        if (!repositorio.ExisteEquipamento(idEquipamentoEscolhido))\n        {\n            Notificador.ExibirMensagem("O equipamento mencionado n\xe3o existe!", ConsoleColor.DarkYellow);\n            return;\n        }\n\n        bool conseguiuExcluir = repositorio.ExcluirEquipamento(idEquipamentoEscolhido);\n\n        if (!conseguiuExcluir)\n        {\n            Notificador.ExibirMensagem("Houve um erro durante a exclus\xe3o do equipamento...", ConsoleColor.Red);\n            return;\n        }\n\n        Notificador.ExibirMensagem("O equipamento foi exclu\xeddo com sucesso!", ConsoleColor.Green);\n    }\n\n    public void VisualizarEquipamentos(bool exibirTitulo)\n    {\n        if (exibirTitulo)\n        {\n            Menu.ExibirCabecalho();\n\n            Console.WriteLine("Visualizando Equipamentos...");\n        }\n\n        Console.WriteLine();\n\n        Console.WriteLine(\n            "{0, -10} | {1, -15} | {2, -11} | {3, -15} | {4, -10} | {5, -10}",\n            "Id", "Nome", "Num. S\xe9rie", "Fabricante", "Pre\xe7o", "Data de Fabrica\xe7\xe3o"\n        );\n\n        Equipamento[] equipamentosCadastrados = repositorio.SelecionarEquipamentos();\n\n        for (int i = 0; i < equipamentosCadastrados.Length; i++)\n        {\n            Equipamento e = equipamentosCadastrados[i];\n\n            if (e == null)\n                continue;\n\n            Console.WriteLine(\n                "{0, -10} | {1, -15} | {2, -11} | {3, -15} | {4, -10} | {5, -10}",\n                e.Id, e.Nome, e.ObterNumeroSerie(), e.Fabricante, e.PrecoAquisicao.ToString("C2"), e.DataFabricacao.ToShortDateString()\n            );\n        }\n\n        Console.WriteLine();\n\n        Notificador.ExibirMensagem("Pressione ENTER para continuar...", ConsoleColor.DarkYellow);\n    }\n}\n'})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"TelaEquipamento.cs"})}),"\n",(0,i.jsx)(a.h2,{id:"implementa\xe7\xe3o-da-camada-de-dados",children:"Implementa\xe7\xe3o da Camada de Dados"}),"\n",(0,i.jsxs)(a.p,{children:["Essa classe, ",(0,i.jsx)(a.code,{children:"RepositorioEquipamento"}),", \xe9 respons\xe1vel por armazenar e gerenciar os equipamentos cadastrados no sistema. Ela utiliza um array de tamanho fixo, com capacidade para 100 equipamentos, para manter os registros."]}),"\n",(0,i.jsxs)(a.p,{children:["Quando um novo equipamento \xe9 cadastrado pelo m\xe9todo ",(0,i.jsx)(a.code,{children:"CadastrarEquipamento"}),", ele recebe um ID gerado por uma classe auxiliar chamada ",(0,i.jsx)(a.code,{children:"GeradorId"}),". Em seguida, esse equipamento \xe9 armazenado no array por meio do m\xe9todo privado ",(0,i.jsx)(a.code,{children:"RegistrarItem"}),", que percorre a estrutura em busca da primeira posi\xe7\xe3o dispon\xedvel e a preenche com o novo objeto."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-cs",children:"public class RepositorioEquipamento\n{\n    public Equipamento[] equipamentos = new Equipamento[100];\n\n    public void CadastrarEquipamento(Equipamento novoEquipamento)\n    {\n        novoEquipamento.Id = GeradorId.GerarIdEquipamento();\n\n        RegistrarItem(novoEquipamento);\n    }\n\n    public bool EditarEquipamento(int id, Equipamento equipamentoEditado)\n    {\n        for (int i = 0; i < equipamentos.Length; i++)\n        {\n            if (equipamentos[i] == null)\n                continue;\n\n            else if (equipamentos[i].Id == id)\n            {\n                equipamentos[i].Nome = equipamentoEditado.Nome;\n                equipamentos[i].Fabricante = equipamentoEditado.Fabricante;\n                equipamentos[i].PrecoAquisicao = equipamentoEditado.PrecoAquisicao;\n                equipamentos[i].DataFabricacao = equipamentoEditado.DataFabricacao;\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    public bool ExcluirEquipamento(int id)\n    {\n        for (int i = 0; i < equipamentos.Length; i++)\n        {\n            if (equipamentos[i] == null)\n                continue;\n\n            else if (equipamentos[i].Id == id)\n            {\n                equipamentos[i] = null;\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    public Equipamento[] SelecionarEquipamentos()\n    {\n        return equipamentos;\n    }\n\n    public Equipamento SelecionarEquipamentoPorId(int id)\n    {\n        for (int i = 0; i < equipamentos.Length; i++)\n        {\n            Equipamento e = equipamentos[i];\n\n            if (e == null)\n                continue;\n\n            else if (e.Id == id)\n                return e;\n        }\n\n        return null;\n    }\n\n    public bool ExisteEquipamento(int id)\n    {\n        for (int i = 0; i < equipamentos.Length; i++)\n        {\n            Equipamento e = equipamentos[i];\n\n            if (e == null)\n                continue;\n\n            else if (e.Id == id)\n                return true;\n        }\n\n        return false;\n    }\n\n    private void RegistrarItem(Equipamento equipamento)\n    {\n        for (int i = 0; i < equipamentos.Length; i++)\n        {\n            if (equipamentos[i] != null)\n                continue;\n\n            else\n            {\n                equipamentos[i] = equipamento;\n                break;\n            }\n        }\n    }\n}\n"})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"RepositorioEquipamento.cs"})}),"\n",(0,i.jsx)(a.h2,{id:"implementa\xe7\xe3o-da-camada-de-neg\xf3cio",children:"Implementa\xe7\xe3o da Camada de Neg\xf3cio"}),"\n",(0,i.jsxs)(a.p,{children:["A classe ",(0,i.jsx)(a.code,{children:"Equipamento"})," representa um item f\xedsico que pode ser cadastrado e gerenciado no sistema. Ela possui propriedades essenciais, como ",(0,i.jsx)(a.code,{children:"Id"}),", que identifica unicamente cada equipamento, ",(0,i.jsx)(a.code,{children:"Nome"}),", que armazena sua denomina\xe7\xe3o, e ",(0,i.jsx)(a.code,{children:"Fabricante"}),", que registra a empresa respons\xe1vel por sua produ\xe7\xe3o. Al\xe9m disso, h\xe1 o ",(0,i.jsx)(a.code,{children:"PrecoAquisicao"}),", que indica o valor de compra do equipamento, e a ",(0,i.jsx)(a.code,{children:"DataFabricacao"}),", que registra quando ele foi produzido."]}),"\n",(0,i.jsxs)(a.p,{children:["O construtor da classe exige que algumas dessas informa\xe7\xf5es sejam fornecidas no momento da cria\xe7\xe3o do objeto. Ele recebe os valores de ",(0,i.jsx)(a.code,{children:"Nome"}),", ",(0,i.jsx)(a.code,{children:"Fabricante"}),", ",(0,i.jsx)(a.code,{children:"PrecoAquisicao"})," e ",(0,i.jsx)(a.code,{children:"DataFabricacao"}),", atribuindo-os diretamente \xe0s respectivas propriedades. O ",(0,i.jsx)(a.code,{children:"Id"}),", no entanto, n\xe3o \xe9 definido aqui, pois ele \xe9 atribu\xeddo posteriormente, provavelmente pelo sistema de gerenciamento."]}),"\n",(0,i.jsxs)(a.p,{children:["Al\xe9m das propriedades b\xe1sicas, a classe tamb\xe9m conta com um m\xe9todo chamado ",(0,i.jsx)(a.code,{children:"ObterNumeroSerie()"}),'. Esse m\xe9todo gera um n\xfamero de s\xe9rie \xfanico para cada equipamento, combinando a data de fabrica\xe7\xe3o no formato "yyyyMM" (ano e m\xeas) com os tr\xeas primeiros caracteres do nome do equipamento, convertidos para mai\xfasculas, e o identificador ',(0,i.jsx)(a.code,{children:"Id"}),". O resultado \xe9 um c\xf3digo no formato ",(0,i.jsx)(a.code,{children:"yyyyMM-ABC123"}),", que pode ser utilizado para facilitar a identifica\xe7\xe3o dos equipamentos no sistema."]}),"\n",(0,i.jsxs)(a.p,{children:["Em resumo, a classe ",(0,i.jsx)(a.code,{children:"Equipamento"})," encapsula as informa\xe7\xf5es fundamentais de um equipamento e inclui um m\xe9todo para gerar um n\xfamero de s\xe9rie baseado em suas caracter\xedsticas, auxiliando na organiza\xe7\xe3o e rastreamento desses itens."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-cs",children:"public class Equipamento\n{\n    public int Id { get; set; }\n    public string Nome { get; set; }\n    public string Fabricante { get; set; }\n    public decimal PrecoAquisicao { get; set; }\n    public DateTime DataFabricacao { get; set; }\n\n    public Equipamento(string nome, string fabricante, decimal precoAquisicao, DateTime dataFabricacao)\n    {\n        Nome = nome;\n        Fabricante = fabricante;\n        PrecoAquisicao = precoAquisicao;\n        DataFabricacao = dataFabricacao;\n    }\n\n    public string ObterNumeroSerie()\n    {\n        string dataFabricacaoCurta = DataFabricacao.ToString(\"yyyyMM\");\n        string tresPrimeirosCaracteres = Nome.Substring(0, 3).ToUpper() + Id;\n\n        return string.Join('-', dataFabricacaoCurta, tresPrimeirosCaracteres);\n    }\n}\n"})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"Equipamento.cs"})}),"\n",(0,i.jsx)(a.h2,{id:"classes-utilit\xe1rias",children:"Classes utilit\xe1rias"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-cs",children:'public static class Menu\n{\n    public static char ApresentarMenuPrincipal()\n    {\n        ExibirCabecalho();\n\n        Console.WriteLine("1 - Ger\xeancia de Equipamentos");\n        Console.WriteLine("S - Sair");\n\n        Console.WriteLine();\n\n        Console.Write("Escolha uma das op\xe7\xf5es: ");\n\n        char opcaoEscolhida = Console.ReadLine()[0];\n\n        return opcaoEscolhida;\n    }\n\n    public static void ExibirCabecalho()\n    {\n        Console.Clear();\n\n        Console.WriteLine("----------------------------------------");\n        Console.WriteLine("|        Gest\xe3o de Equipamentos        |");\n        Console.WriteLine("----------------------------------------");\n\n        Console.WriteLine();\n    }\n}\n'})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"Menu.cs"})}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-cs",children:"public static class Notificador\n{\n    public static void ExibirMensagem(string mensagem, ConsoleColor cor)\n    {\n        Console.ForegroundColor = cor;\n\n        Console.WriteLine();\n\n        Console.WriteLine(mensagem);\n\n        Console.ResetColor();\n\n        Console.ReadLine();\n    }\n}\n"})}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-cs",children:" public static class GeradorId\n {\n     private static int IdEquipamentos = 0;\n\n     public static int GerarIdEquipamento()\n     {\n         return ++IdEquipamentos;\n     }\n }\n"})}),"\n",(0,i.jsx)(a.p,{children:(0,i.jsx)(a.code,{children:"GeradorId.cs"})})]})}function u(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>t});var o=n(6540);const i={},s=o.createContext(i);function r(e){const a=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function t(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:a},e.children)}}}]);