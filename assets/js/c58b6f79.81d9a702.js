"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5985],{6326:(r,o,e)=>{e.r(o),e.d(o,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"Cronograma das Aulas/Semana 02/Aula 09/Programa\xe7\xe3o Estuturada, M\xe9todos e Vari\xe1veis Globais","title":"Programa\xe7\xe3o Estuturada, M\xe9todos e Vari\xe1veis Globais","description":"Programa\xe7\xe3o estruturada \xe9 um paradigma que enfatiza a organiza\xe7\xe3o do c\xf3digo por meio de sequ\xeancia, decis\xe3o e repeti\xe7\xe3o. Diferente da programa\xe7\xe3o sequencial, aqui nos concentramos em fun\xe7\xf5es (m\xe9todos) e no fluxo do programa dentro da Main.","source":"@site/docs/Cronograma das Aulas/Semana 02/Aula 09/01. Programa\xe7\xe3o Estuturada, M\xe9todos e Vari\xe1veis Globais.mdx","sourceDirName":"Cronograma das Aulas/Semana 02/Aula 09","slug":"/Cronograma das Aulas/Semana 02/Aula 09/Programa\xe7\xe3o Estuturada, M\xe9todos e Vari\xe1veis Globais","permalink":"/blog/docs/Cronograma das Aulas/Semana 02/Aula 09/Programa\xe7\xe3o Estuturada, M\xe9todos e Vari\xe1veis Globais","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Jogo da Forca","permalink":"/blog/docs/Cronograma das Aulas/Semana 02/Aula 08/Jogo da Forca"},"next":{"title":"Aula 10","permalink":"/blog/docs/Cronograma das Aulas/Semana 02/Aula 10/"}}');var a=e(4848),t=e(8453);const i={},s=void 0,d={},c=[{value:"Calculadora Estruturada",id:"calculadora-estruturada",level:2},{value:"Vers\xe3o 1: Programa\xe7\xe3o Estruturada com m\xe9todos",id:"vers\xe3o-1-programa\xe7\xe3o-estruturada-com-m\xe9todos",level:3}];function l(r){const o={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...r.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(o.p,{children:["Programa\xe7\xe3o estruturada \xe9 um paradigma que enfatiza a organiza\xe7\xe3o do c\xf3digo por meio de ",(0,a.jsx)(o.strong,{children:"sequ\xeancia, decis\xe3o e repeti\xe7\xe3o"}),". Diferente da programa\xe7\xe3o sequencial, aqui nos concentramos em fun\xe7\xf5es (m\xe9todos) e no fluxo do programa dentro da ",(0,a.jsx)(o.code,{children:"Main"}),"."]}),"\n",(0,a.jsxs)(o.p,{children:["Um ",(0,a.jsx)(o.strong,{children:"m\xe9todo"})," (ou fun\xe7\xe3o) \xe9 um bloco de c\xf3digo que executa uma tarefa espec\xedfica. Ele ajuda a dividir o programa em partes menores e reutiliz\xe1veis."]}),"\n",(0,a.jsx)(o.p,{children:"Em C#, um m\xe9todo geralmente segue esta estrutura:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-cs",children:"modificadorDeAcesso tipoDeRetorno NomeDoMetodo(tipoDoParametro parametro)\r\n{\r\n    // C\xf3digo a ser executado\r\n    return valor; // (se necess\xe1rio)\r\n}\n"})}),"\n",(0,a.jsx)(o.p,{children:"Onde:"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.strong,{children:"modificadorDeAcesso"}),": Define se outros arquivos poder\xe3o referenciar este m\xe9todo (",(0,a.jsx)(o.code,{children:"private"}),"por padr\xe3o)."]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.strong,{children:"tipoDeRetorno"}),": Define o que o m\xe9todo devolve (",(0,a.jsx)(o.code,{children:"void"})," se n\xe3o retornar nada)."]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.strong,{children:"NomeDoMetodo"}),": Nome que identifica o m\xe9todo."]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.strong,{children:"tipoDoParametro parametro"}),": Entrada opcional para o m\xe9todo."]}),"\n",(0,a.jsxs)(o.li,{children:[(0,a.jsx)(o.strong,{children:"return"}),": Retorna um valor (se aplic\xe1vel)."]}),"\n"]}),"\n",(0,a.jsx)(o.h2,{id:"calculadora-estruturada",children:"Calculadora Estruturada"}),"\n",(0,a.jsx)(o.p,{children:"Iremos refatorar nosso c\xf3digo da calculadora para se beneficiar dos paradigmas de programa\xe7\xe3o estruturada."}),"\n",(0,a.jsx)(o.h3,{id:"vers\xe3o-1-programa\xe7\xe3o-estruturada-com-m\xe9todos",children:"Vers\xe3o 1: Programa\xe7\xe3o Estruturada com m\xe9todos"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-cs",children:'static string[] historicoOperacoes = new string[100];\r\nstatic int contadorHistorico = 0;\r\n\r\nstatic void Main(string[] args)\r\n{\r\n\twhile (true)\r\n\t{\r\n\t\tstring operacao = MostrarMenu();\r\n\r\n\t\tif (OpcaoSaidaSelecionada(operacao))\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\telse if (OpcaoTabuadaSelecionada(operacao))\r\n\t\t\tExibirTabuada();\r\n\t\t\r\n\t\telse if (OpcaoHistoricoSelecionada(operacao))\r\n\t\t\tExibirHistoricoOperacoes();\r\n\r\n\t\telse if (OpcaoInvalida(operacao))\r\n\t\t\tExibirMensagemErro();\r\n\r\n\t\telse\r\n\t\t\tExibirResultado(RealizarCalculo(operacao));\r\n\t}\r\n}\r\n\r\nstatic string MostrarMenu()\r\n{\r\n\tConsole.Clear();\r\n\tConsole.WriteLine("--------------------------------");\r\n\tConsole.WriteLine("Calculadora Tabajara 2025");\r\n\tConsole.WriteLine("--------------------------------");\r\n\r\n\tConsole.WriteLine("1 - Somar");\r\n\tConsole.WriteLine("2 - Subtrair");\r\n\tConsole.WriteLine("3 - Multiplica\xe7\xe3o");\r\n\tConsole.WriteLine("4 - Divis\xe3o");\r\n\tConsole.WriteLine("5 - Tabuada");\r\n\tConsole.WriteLine("6 - Hist\xf3rico de Opera\xe7\xf5es");\r\n\tConsole.WriteLine("S - Sair");\r\n\r\n\tstring operacao = Console.ReadLine()!.ToUpper();\r\n\r\n\treturn operacao;\r\n}\r\n\r\nstatic bool OpcaoSaidaSelecionada(string opcao)\r\n{\r\n\tbool opcaoSaidaSelecionada = opcao == "S";\r\n\r\n\treturn opcaoSaidaSelecionada;\r\n}\r\n\r\nstatic bool OpcaoTabuadaSelecionada(string opcao)\r\n{\r\n\treturn opcao == "5";\r\n}\r\n\r\nstatic bool OpcaoInvalida(string opcao)\r\n{\r\n\tbool opcaoInvalida = opcao != "1" && opcao != "2" && opcao != "3" && opcao != "4" && opcao != "5" && opcao != "6" && opcao != "S";\r\n\r\n\treturn opcaoInvalida;\r\n}\r\n\r\nstatic void ExibirMensagemErro()\r\n{\r\n\tConsole.WriteLine("Opera\xe7\xe3o inv\xe1lida, tente novamente...");\r\n\tConsole.ReadLine();\r\n}\r\n\r\nstatic decimal RealizarCalculo(string operacao)\r\n{\r\n\tConsole.WriteLine("Digite o primeiro n\xfamero:");\r\n\r\n\tdecimal primeiroNumero = Convert.ToDecimal(Console.ReadLine());\r\n\r\n\tConsole.WriteLine("Digite o segundo n\xfamero:");\r\n\r\n\tdecimal segundoNumero = Convert.ToDecimal(Console.ReadLine());\r\n\r\n\tdecimal resultado = 0;\r\n\r\n\tswitch (operacao)\r\n\t{\r\n\t\tcase "1":\r\n\t\t\tresultado = primeiroNumero + segundoNumero;\r\n\t\t\thistoricoOperacoes[contadorHistorico] = $"{primeiroNumero} + {segundoNumero} = {resultado}";\r\n\t\t\tbreak;\r\n\r\n\t\tcase "2":\r\n\t\t\tresultado = primeiroNumero - segundoNumero;\r\n\t\t\thistoricoOperacoes[contadorHistorico] = $"{primeiroNumero} - {segundoNumero} = {resultado}";\r\n\t\t\tbreak;\r\n\r\n\t\tcase "3":\r\n\t\t\tresultado = primeiroNumero * segundoNumero;\r\n\t\t\thistoricoOperacoes[contadorHistorico] = $"{primeiroNumero} * {segundoNumero} = {resultado}";\r\n\t\t\tbreak;\r\n\r\n\t\tcase "4":\r\n\t\t\twhile (segundoNumero == 0)\r\n\t\t\t{\r\n\t\t\t\tConsole.Write("N\xe3o \xe9 poss\xedvel dividir por 0\\n Digite o segundo n\xfamero novamente -> ");\r\n\r\n\t\t\t\tsegundoNumero = Convert.ToDecimal(Console.ReadLine());\r\n\t\t\t}\r\n\r\n\t\t\tresultado = primeiroNumero / segundoNumero;\r\n\t\t\thistoricoOperacoes[contadorHistorico] = $"{primeiroNumero} / {segundoNumero} = {resultado}";\r\n\t\t\tbreak;\r\n\t}\r\n\t\r\n\tcontadorHistorico++;\r\n\r\n\treturn resultado;\r\n}\r\n\r\nstatic void ExibirResultado(decimal resultado)\r\n{\r\n\tConsole.WriteLine("--------------------------------");\r\n\tConsole.WriteLine("O resultado \xe9: " + resultado.ToString("F2"));\r\n\tConsole.WriteLine("--------------------------------");\r\n\r\n\tConsole.ReadLine();\r\n}\r\n\r\nstatic void ExibirTabuada()\r\n{\r\n\tConsole.WriteLine("--------------------------------");\r\n\tConsole.WriteLine("Tabuada");\r\n\tConsole.WriteLine("--------------------------------");\r\n\t\r\n\tConsole.Write("Digite o n\xfamero: ");\r\n\tint numeroTabuada = Convert.ToInt32(Console.ReadLine());\r\n\t\r\n\tfor (int contador = 1; contador <= 10; contador++)\r\n\t{\r\n\t    int resultadoTabuada = numeroTabuada * contador;\r\n\t\r\n\t    Console.WriteLine($"{numeroTabuada} x {contador} = {resultadoTabuada}");\r\n\t}\r\n\r\n\tConsole.Write("Aperte ENTER para continuar");\r\n\tConsole.ReadLine();\r\n}\r\n\r\nstatic void ExibirHistoricoOperacoes()\r\n{\r\n\tConsole.WriteLine("--------------------------------");\r\n\tConsole.WriteLine("Hist\xf3rico de Opera\xe7\xf5es");\r\n\tConsole.WriteLine("--------------------------------");\r\n\t\r\n\tfor (int contador = 0; contador < historicoOperacoes.Length; contador++)\r\n\t{\r\n\t    string valorAtual = historicoOperacoes[contador];\r\n\t\r\n\t    if (valorAtual != null)\r\n\t        Console.WriteLine(valorAtual);\r\n\t}\r\n\t\r\n\tConsole.Write("Aperte ENTER para continuar");\r\n\tConsole.ReadLine();\r\n}\n'})}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.code,{children:"Program.cs"})})]})}function u(r={}){const{wrapper:o}={...(0,t.R)(),...r.components};return o?(0,a.jsx)(o,{...r,children:(0,a.jsx)(l,{...r})}):l(r)}},8453:(r,o,e)=>{e.d(o,{R:()=>i,x:()=>s});var n=e(6540);const a={},t=n.createContext(a);function i(r){const o=n.useContext(t);return n.useMemo((function(){return"function"==typeof r?r(o):{...o,...r}}),[o,r])}function s(r){let o;return o=r.disableParentContext?"function"==typeof r.components?r.components(a):r.components||a:i(r.components),n.createElement(t.Provider,{value:o},r.children)}}}]);