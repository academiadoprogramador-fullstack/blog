"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9420],{139:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"Cronograma das Aulas/Semana 09/Aula 44/Encapsulamento","title":"Encapsulamento","description":"Introdu\xe7\xe3o","source":"@site/docs/Cronograma das Aulas/Semana 09/Aula 44/02. Encapsulamento.mdx","sourceDirName":"Cronograma das Aulas/Semana 09/Aula 44","slug":"/Cronograma das Aulas/Semana 09/Aula 44/Encapsulamento","permalink":"/blog/docs/Cronograma das Aulas/Semana 09/Aula 44/Encapsulamento","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Arquitetura em 3 Camadas","permalink":"/blog/docs/Cronograma das Aulas/Semana 09/Aula 44/Arquitetura em 3 Camadas"},"next":{"title":"Heran\xe7a","permalink":"/blog/docs/Cronograma das Aulas/Semana 09/Aula 44/Heran\xe7a"}}');var s=r(4848),o=r(8453);const d={},i=void 0,l={},c=[{value:"Introdu\xe7\xe3o",id:"introdu\xe7\xe3o",level:2},{value:"Por que aplicar encapsulamento?",id:"por-que-aplicar-encapsulamento",level:3},{value:"Propriedades Autom\xe1ticas",id:"propriedades-autom\xe1ticas",level:2},{value:"Exemplo com propriedade manual VS autom\xe1tica:",id:"exemplo-com-propriedade-manual-vs-autom\xe1tica",level:3},{value:"Propriedades Read-Only:",id:"propriedades-read-only",level:3},{value:"Quando usar propriedades autom\xe1ticas:",id:"quando-usar-propriedades-autom\xe1ticas",level:3}];function t(e){const a={code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h2,{id:"introdu\xe7\xe3o",children:"Introdu\xe7\xe3o"}),"\n",(0,s.jsxs)(a.p,{children:["O ",(0,s.jsx)(a.strong,{children:"encapsulamento"})," \xe9 um dos quatro pilares da programa\xe7\xe3o orientada a objetos (junto com heran\xe7a, polimorfismo e abstra\xe7\xe3o). Em C#, o encapsulamento se refere ao ato de esconder os detalhes internos de uma classe e expor apenas o que \xe9 necess\xe1rio por meio de uma interface p\xfablica controlada, normalmente atrav\xe9s de ",(0,s.jsx)(a.strong,{children:"propriedades"})," e ",(0,s.jsx)(a.strong,{children:"m\xe9todos"}),"."]}),"\n",(0,s.jsx)(a.p,{children:"O encapsulamento protege os dados internos de uma classe contra acessos ou altera\xe7\xf5es indevidas, promovendo seguran\xe7a e manuten\xe7\xe3o mais f\xe1cil do c\xf3digo."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-cs",children:"public class ContaCorrente\r\n{\r\n    // Campo privado: s\xf3 pode ser acessado dentro da pr\xf3pria classe\r\n    private decimal saldo;\r\n\r\n    // Propriedade para acessar o saldo de forma controlada\r\n    public decimal Saldo\r\n    {\r\n        get { return saldo; }\r\n        private set { saldo = value; }\r\n    }\r\n\r\n    public void Depositar(decimal valor)\r\n    {\r\n        if (valor > 0)\r\n            saldo += valor;\r\n    }\r\n\r\n    public bool Sacar(decimal valor)\r\n    {\r\n        if (valor <= saldo)\r\n        {\r\n            saldo -= valor;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.code,{children:"ContaCorrente.cs"})}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.code,{children:"saldo"})," \xe9 um campo ",(0,s.jsx)(a.strong,{children:"privado"}),": n\xe3o pode ser acessado diretamente de fora da classe."]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.code,{children:"Saldo"})," \xe9 uma ",(0,s.jsx)(a.strong,{children:"propriedade p\xfablica"})," com um ",(0,s.jsx)(a.code,{children:"get"})," e ",(0,s.jsx)(a.code,{children:"set"})," controlados. Nesse caso, o ",(0,s.jsx)(a.code,{children:"set"})," \xe9 ",(0,s.jsx)(a.code,{children:"private"}),", o que impede que outras classes modifiquem o saldo diretamente."]}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsxs)(a.p,{children:["Os m\xe9todos ",(0,s.jsx)(a.code,{children:"Depositar"})," e ",(0,s.jsx)(a.code,{children:"Sacar"})," s\xe3o a ",(0,s.jsx)(a.strong,{children:"interface p\xfablica"})," que permite manipular o saldo de forma segura."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.h3,{id:"por-que-aplicar-encapsulamento",children:"Por que aplicar encapsulamento?"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Seguran\xe7a"}),": impede altera\xe7\xf5es diretas em dados sens\xedveis."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Valida\xe7\xe3o"}),": permite validar dados antes de alter\xe1-los."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Facilidade de manuten\xe7\xe3o"}),": a l\xf3gica interna pode mudar sem afetar o c\xf3digo externo que usa a classe."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Abstra\xe7\xe3o"}),": esconde detalhes complexos da implementa\xe7\xe3o."]}),"\n"]}),"\n",(0,s.jsx)(a.h2,{id:"propriedades-autom\xe1ticas",children:"Propriedades Autom\xe1ticas"}),"\n",(0,s.jsxs)(a.p,{children:["Em C#, ",(0,s.jsx)(a.strong,{children:"propriedades autom\xe1ticas"})," (ou ",(0,s.jsx)(a.em,{children:"auto-implemented properties"}),") s\xe3o uma forma simplificada de declarar propriedades quando ",(0,s.jsx)(a.strong,{children:"nenhuma l\xf3gica adicional \xe9 necess\xe1ria"})," nos m\xe9todos ",(0,s.jsx)(a.code,{children:"get"})," e ",(0,s.jsx)(a.code,{children:"set"}),"."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-cs",children:"public class Pessoa\r\n{\r\n    public string Nome { get; set; }\r\n    public int Idade { get; set; }\r\n}\n"})}),"\n",(0,s.jsxs)(a.p,{children:["Ao usar propriedades autom\xe1ticas, o compilador cria ",(0,s.jsx)(a.strong,{children:"campos privados ocultos"})," nos bastidores para armazenar os valores. Voc\xea n\xe3o precisa declarar esses campos manualmente."]}),"\n",(0,s.jsx)(a.h3,{id:"exemplo-com-propriedade-manual-vs-autom\xe1tica",children:"Exemplo com propriedade manual VS autom\xe1tica:"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.strong,{children:"Propriedade manual:"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-cs",children:"private string nome;\r\n\r\npublic string Nome\r\n{\r\n    get { return nome; }\r\n    set { nome = value; }\r\n}\n"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.strong,{children:"Propriedade autom\xe1tica (equivalente):"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-cs",children:"public string Nome { get; set; }\n"})}),"\n",(0,s.jsx)(a.h3,{id:"propriedades-read-only",children:"Propriedades Read-Only:"}),"\n",(0,s.jsxs)(a.p,{children:["Voc\xea pode tornar o ",(0,s.jsx)(a.code,{children:"set"})," privado (encapsulamento) mesmo com propriedades autom\xe1ticas:"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-cs",children:"public string Nome { get; private set; }\n"})}),"\n",(0,s.jsx)(a.h3,{id:"quando-usar-propriedades-autom\xe1ticas",children:"Quando usar propriedades autom\xe1ticas:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["Quando n\xe3o h\xe1 necessidade de l\xf3gica especial no ",(0,s.jsx)(a.code,{children:"get"})," ou ",(0,s.jsx)(a.code,{children:"set"}),"."]}),"\n",(0,s.jsx)(a.li,{children:"Para tornar o c\xf3digo mais conciso e leg\xedvel."}),"\n"]})]})}function u(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},8453:(e,a,r)=>{r.d(a,{R:()=>d,x:()=>i});var n=r(6540);const s={},o=n.createContext(s);function d(e){const a=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(o.Provider,{value:a},e.children)}}}]);