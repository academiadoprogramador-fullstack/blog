"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2412],{6266:(r,n,e)=>{e.r(n),e.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Cronograma das Aulas/Semana 10/Aula 48/Introdu\xe7\xe3o ao ASP.NET MVC","title":"Introdu\xe7\xe3o ao ASP.NET MVC","description":"Introdu\xe7\xe3o","source":"@site/docs/Cronograma das Aulas/Semana 10/Aula 48/Introdu\xe7\xe3o ao ASP.NET MVC.mdx","sourceDirName":"Cronograma das Aulas/Semana 10/Aula 48","slug":"/Cronograma das Aulas/Semana 10/Aula 48/Introdu\xe7\xe3o ao ASP.NET MVC","permalink":"/blog/docs/Cronograma das Aulas/Semana 10/Aula 48/Introdu\xe7\xe3o ao ASP.NET MVC","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Aula 47","permalink":"/blog/docs/Cronograma das Aulas/Semana 10/Aula 47/"},"next":{"title":"Aula 49","permalink":"/blog/docs/Cronograma das Aulas/Semana 10/Aula 49/"}}');var a=e(4848),i=e(8453);const o={},s=void 0,c={},l=[{value:"Introdu\xe7\xe3o",id:"introdu\xe7\xe3o",level:2},{value:"Servidor Web",id:"servidor-web",level:3},{value:"Implementa\xe7\xf5es da Aula",id:"implementa\xe7\xf5es-da-aula",level:2},{value:"Hello World",id:"hello-world",level:3},{value:"P\xe1gina Inicial",id:"p\xe1gina-inicial",level:3},{value:"Notifica\xe7\xe3o (HTML)",id:"notifica\xe7\xe3o-html",level:3},{value:"Visualizar Fabricantes (Plaintext)",id:"visualizar-fabricantes-plaintext",level:3},{value:"Visualizar Fabricantes (HTML)",id:"visualizar-fabricantes-html",level:3},{value:"HTML",id:"html",level:4},{value:"Cadastrar Fabricante (GET e POST)",id:"cadastrar-fabricante-get-e-post",level:3},{value:"HTML",id:"html-1",level:4},{value:"Editar Fabricante (GET e POST)",id:"editar-fabricante-get-e-post",level:3},{value:"HTML",id:"html-2",level:4},{value:"Excluir Fabricante (GET e POST)",id:"excluir-fabricante-get-e-post",level:3},{value:"HTML",id:"html-3",level:4},{value:"Program.cs Completo",id:"programcs-completo",level:3}];function d(r){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...r.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"introdu\xe7\xe3o",children:"Introdu\xe7\xe3o"}),"\n",(0,a.jsxs)(n.p,{children:["O ",(0,a.jsx)(n.strong,{children:"ASP.NET Core"})," \xe9 um ",(0,a.jsx)(n.strong,{children:"framework de desenvolvimento web"})," da Microsoft. Ele permite que voc\xea crie ",(0,a.jsx)(n.strong,{children:"APIs"}),", ",(0,a.jsx)(n.strong,{children:"sites"})," e ",(0,a.jsx)(n.strong,{children:"aplica\xe7\xf5es web em tempo real"}),", tudo com ",(0,a.jsx)(n.strong,{children:"alta performance"}),", ",(0,a.jsx)(n.strong,{children:"multiplataforma"})," e com ",(0,a.jsx)(n.strong,{children:"arquitetura moderna baseada em inje\xe7\xe3o de depend\xeancia e middlewares"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"servidor-web",children:"Servidor Web"}),"\n",(0,a.jsxs)(n.p,{children:["Quando voc\xea cria um projeto ASP.NET Core, voc\xea est\xe1 basicamente ",(0,a.jsx)(n.strong,{children:"criando um servidor web"})," que vai responder a requisi\xe7\xf5es HTTP."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:"static void Main(string[] args)\r\n{\r\n\t// construtor do servidor, respons\xe1vel por configurar as depend\xeancias\r\n    WebApplicationBuilder builder = WebApplication.CreateBuilder(args);\r\n\r\n\t// cria uma inst\xe2ncia do servidor baseada na configura\xe7\xe3o do builder\r\n    WebApplication app = builder.Build(); \r\n\t\r\n\t// inicia o loop do servidor web, escutando requisi\xe7\xf5es\r\n    app.Run();\r\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"implementa\xe7\xf5es-da-aula",children:"Implementa\xe7\xf5es da Aula"}),"\n",(0,a.jsx)(n.h3,{id:"hello-world",children:"Hello World"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:'static Task OlaMundo(HttpContext context)\r\n{\r\n\tcontext.Response.ContentType = "text/plain; charset=utf-8";\r\n\r\n\treturn context.Response.WriteAsync("Ol\xe1, mundo!");\r\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"p\xe1gina-inicial",children:"P\xe1gina Inicial"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:'static Task PaginaInicial(HttpContext context)\r\n{\r\n\tstring conteudo = File.ReadAllText("Html/PaginaInicial.html");\r\n\r\n\treturn context.Response.WriteAsync(conteudo);\r\n}\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\r\n<html lang="pt-br">\r\n    <head>\r\n        <meta charset="utf-8" />\r\n        <title>In\xedcio - Gest\xe3o de Equipamentos</title>\r\n    </head>\r\n    <body>\r\n        <h1>Gest\xe3o de Equipamentos</h1>\r\n\r\n        <h3>Fabricantes</h3>\r\n\r\n        <ul>\r\n            <li><a href="/fabricantes/cadastrar">Cadastrar Novo Fabricante</a></li>\r\n            <li><a href="/fabricantes/visualizar">Visualizar Fabricantes</a></li>\r\n        </ul>\r\n    </body>\r\n</html>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"notifica\xe7\xe3o-html",children:"Notifica\xe7\xe3o (HTML)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\r\n<html lang="pt-br">\r\n<head>\r\n    <meta charset="utf-8" />\r\n    <title>Notifica\xe7\xe3o - Gest\xe3o de Equipamentos</title>\r\n</head>\r\n<body>\r\n    <h1>Gest\xe3o de Equipamentos</h1>\r\n\r\n    <hr />\r\n\r\n    <a href="/">P\xe1gina Inicial</a> /\r\n\r\n    <hr />\r\n\r\n    <h3>Notifica\xe7\xe3o</h3>\r\n\r\n    <p>#mensagem#</p>\r\n\r\n</body>\r\n</html>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"visualizar-fabricantes-plaintext",children:"Visualizar Fabricantes (Plaintext)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:'static Task VisualizarFabricantes(HttpContext context)\r\n{\r\n\tContextoDados contextoDados = new ContextoDados(true);\r\n\tIRepositorioFabricante repositorioFabricante = new RepositorioFabricanteEmArquivo(contextoDados);\r\n\r\n\tList<Fabricante> fabricantes = repositorioFabricante.SelecionarRegistros();\r\n\r\n\tStringBuilder sb = new StringBuilder();\r\n\r\n\tforeach (Fabricante f in fabricantes)\r\n\t\tsb.AppendLine(f.ToString());\r\n\r\n\tstring fabricantesString = sb.ToString();\r\n\r\n\tcontext.Response.ContentType = "text/plain; charset=utf-8";\r\n\r\n\treturn context.Response.WriteAsync(fabricantesString);\r\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"visualizar-fabricantes-html",children:"Visualizar Fabricantes (HTML)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:'static Task VisualizarFabricantes(HttpContext context)\r\n{\r\n    ContextoDados contextoDados = new ContextoDados(true);\r\n    IRepositorioFabricante repositorioFabricante = new RepositorioFabricanteEmArquivo(contextoDados);\r\n\r\n    List<Fabricante> fabricantes = repositorioFabricante.SelecionarRegistros();\r\n\r\n    string conteudo = File.ReadAllText("Html/VisualizarFabricantes.html");\r\n\r\n    StringBuilder sb = new StringBuilder(conteudo);\r\n\r\n    foreach (Fabricante f in fabricantes)\r\n    {\r\n        string itemLista = $"<li>{f.ToString()} / <a href=\\"/fabricantes/editar/{f.Id}\\">Editar</a> / <a href=\\"/fabricantes/excluir/{f.Id}\\">Excluir</a></li> #fabricante#";\r\n\r\n        sb.Replace("#fabricante#", itemLista);\r\n    }\r\n\r\n    sb.Replace("#fabricante#", "");\r\n\r\n    string conteudoString = sb.ToString();\r\n\r\n    return context.Response.WriteAsync(conteudoString);\r\n}\n'})}),"\n",(0,a.jsx)(n.h4,{id:"html",children:"HTML"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\r\n<html lang="pt-br">\r\n    <head>\r\n        <meta charset="utf-8" />\r\n        <title>Visualiza\xe7\xe3o de Fabricantes - Gest\xe3o de Equipamentos</title>\r\n    </head>\r\n    <body>\r\n        <h1>Gest\xe3o de Equipamentos</h1>\r\n\r\n        <hr />\r\n\r\n        <a href="/">P\xe1gina Inicial</a> /\r\n        <a href="/fabricantes/cadastrar">Cadastrar Novo Fabricante</a> /\r\n\r\n        <hr />\r\n\r\n        <h3>Visualiza\xe7\xe3o de Fabricantes</h3>\r\n\r\n        <ul>\r\n            #fabricante#\r\n        </ul>\r\n    </body>\r\n</html>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"cadastrar-fabricante-get-e-post",children:"Cadastrar Fabricante (GET e POST)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:'static Task FormularioCadastrarFabricante(HttpContext context)\r\n{\r\n    string form = File.ReadAllText("Html/CadastrarFabricante.html");\r\n\r\n    return context.Response.WriteAsync(form);\r\n}\r\n\r\nstatic Task CadastrarFabricante(HttpContext context)\r\n{\r\n    ContextoDados contextoDados = new ContextoDados(true);\r\n    IRepositorioFabricante repositorioFabricante = new RepositorioFabricanteEmArquivo(contextoDados);\r\n    \r\n    string nome = context.Request.Form["nome"].ToString();\r\n    string email = context.Request.Form["email"].ToString();\r\n    string telefone = context.Request.Form["telefone"].ToString();\r\n\r\n    Fabricante novoFabricante = new Fabricante(nome, email, telefone);\r\n\r\n    repositorioFabricante.CadastrarRegistro(novoFabricante);\r\n\r\n    string conteudo = File.ReadAllText("Html/Notificacao.html");\r\n\r\n    StringBuilder sb = new StringBuilder(conteudo);\r\n\r\n    sb.Replace("#mensagem#", $"O registro \\"{novoFabricante.Nome}\\" foi cadastrado com sucesso!");\r\n\r\n    string conteudoString = sb.ToString();\r\n\r\n    return context.Response.WriteAsync(conteudoString);\r\n}\n'})}),"\n",(0,a.jsx)(n.h4,{id:"html-1",children:"HTML"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\r\n<html lang="pt-br">\r\n<head>\r\n    <meta charset="utf-8" />\r\n    <title>Cadastro de Fabricante - Gest\xe3o de Equipamentos</title>\r\n</head>\r\n<body>\r\n    <h1>Gest\xe3o de Equipamentos</h1>\r\n\r\n    <hr />\r\n\r\n    <a href="/">P\xe1gina Inicial</a> /\r\n    <a href="/fabricantes/visualizar">Visualizar Fabricantes</a>\r\n\r\n    <hr />\r\n\r\n    <h3>Cadastro de Fabricante</h3>\r\n\r\n    <form action="/fabricantes/cadastrar" method="post">\r\n        <label>Nome do Fabricante:</label>\r\n        <br />\r\n        <input type="text" name="nome" />\r\n\r\n        <br />\r\n\r\n        <label>Email do Fabricante:</label>\r\n        <br />\r\n        <input type="text" name="email" />\r\n\r\n        <br />\r\n\r\n        <label>Telefone do Fabricante:</label>\r\n        <br />\r\n        <input type="text" name="telefone" />\r\n\r\n        <hr />\r\n\r\n        <button>Gravar</button>\r\n    </form>\r\n\r\n\r\n</body>\r\n</html>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"editar-fabricante-get-e-post",children:"Editar Fabricante (GET e POST)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:'static Task FormularioEditarFabricante(HttpContext context)\r\n{\r\n    ContextoDados contextoDados = new ContextoDados(true);\r\n    IRepositorioFabricante repositorioFabricante = new RepositorioFabricanteEmArquivo(contextoDados);\r\n\r\n    int id = Convert.ToInt32(context.GetRouteValue("id"));\r\n\r\n    Fabricante fabricante = repositorioFabricante.SelecionarRegistroPorId(id);\r\n\r\n    string conteudo = File.ReadAllText("Html/EditarFabricante.html");\r\n\r\n    StringBuilder sb = new StringBuilder(conteudo);\r\n\r\n    sb.Replace("#id#", id.ToString());\r\n    sb.Replace("#nome#", fabricante.Nome);\r\n    sb.Replace("#email#", fabricante.Email);\r\n    sb.Replace("#telefone#",fabricante.Telefone);\r\n\r\n    string conteudoString = sb.ToString();\r\n\r\n    return context.Response.WriteAsync(conteudoString);\r\n}\r\n\r\nstatic Task EditarFabricante(HttpContext context)\r\n{\r\n    ContextoDados contextoDados = new ContextoDados(true);\r\n    IRepositorioFabricante repositorioFabricante = new RepositorioFabricanteEmArquivo(contextoDados);\r\n\r\n    string nome = context.Request.Form["nome"].ToString();\r\n    string email = context.Request.Form["email"].ToString();\r\n    string telefone = context.Request.Form["telefone"].ToString();\r\n\r\n    Fabricante fabricanteAtualizado = new Fabricante(nome, email, telefone);\r\n\r\n    int id = Convert.ToInt32(context.GetRouteValue("id"));\r\n\r\n    repositorioFabricante.EditarRegistro(id, fabricanteAtualizado);\r\n\r\n    string conteudo = File.ReadAllText("Html/Notificacao.html");\r\n\r\n    StringBuilder sb = new StringBuilder(conteudo);\r\n\r\n    sb.Replace("#mensagem#", $"O registro \\"{fabricanteAtualizado.Nome}\\" foi editado com sucesso!");\r\n\r\n    string conteudoString = sb.ToString();\r\n\r\n    return context.Response.WriteAsync(conteudoString);\r\n}\n'})}),"\n",(0,a.jsx)(n.h4,{id:"html-2",children:"HTML"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\r\n<html lang="pt-br">\r\n<head>\r\n    <meta charset="utf-8" />\r\n    <title>Edi\xe7\xe3o de Fabricante - Gest\xe3o de Equipamentos</title>\r\n</head>\r\n<body>\r\n    <h1>Gest\xe3o de Equipamentos</h1>\r\n\r\n    <hr />\r\n\r\n    <a href="/">P\xe1gina Inicial</a> /\r\n    <a href="/fabricantes/cadastrar">Cadastrar Novo Fabricante</a> /\r\n    <a href="/fabricantes/visualizar">Visualizar Fabricantes</a>\r\n\r\n    <hr />\r\n\r\n    <h3>Edi\xe7\xe3o de Fabricante</h3>\r\n\r\n    <form action="/fabricantes/editar/#id#" method="post">\r\n        <label>Nome do Fabricante:</label>\r\n        <br />\r\n        <input type="text" name="nome" value="#nome#" />\r\n\r\n        <br />\r\n\r\n        <label>Email do Fabricante:</label>\r\n        <br />\r\n        <input type="text" name="email" value="#email#" />\r\n\r\n        <br />\r\n\r\n        <label>Telefone do Fabricante:</label>\r\n        <br />\r\n        <input type="text" name="telefone" value="#telefone#" />\r\n\r\n        <hr />\r\n\r\n        <button>Gravar</button>\r\n    </form>\r\n</body>\r\n</html>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"excluir-fabricante-get-e-post",children:"Excluir Fabricante (GET e POST)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:'static Task FormularioExcluirFabricante(HttpContext context)\r\n{\r\n    ContextoDados contextoDados = new ContextoDados(true);\r\n    IRepositorioFabricante repositorioFabricante = new RepositorioFabricanteEmArquivo(contextoDados);\r\n\r\n    int id = Convert.ToInt32(context.GetRouteValue("id"));\r\n\r\n    Fabricante fabricante = repositorioFabricante.SelecionarRegistroPorId(id);\r\n\r\n    string conteudo = File.ReadAllText("Html/ExcluirFabricante.html");\r\n\r\n    StringBuilder sb = new StringBuilder(conteudo);\r\n\r\n    sb.Replace("#id#", id.ToString());\r\n    sb.Replace("#fabricante#", fabricante.Nome);\r\n\r\n    string conteudoString = sb.ToString();\r\n\r\n    return context.Response.WriteAsync(conteudoString);\r\n}\r\n\r\nstatic Task ExcluirFabricante(HttpContext context)\r\n{\r\n    ContextoDados contextoDados = new ContextoDados(true);\r\n    IRepositorioFabricante repositorioFabricante = new RepositorioFabricanteEmArquivo(contextoDados);\r\n\r\n    int id = Convert.ToInt32(context.GetRouteValue("id"));\r\n\r\n    repositorioFabricante.ExcluirRegistro(id);\r\n\r\n    string conteudo = File.ReadAllText("Html/Notificacao.html");\r\n\r\n    StringBuilder sb = new StringBuilder(conteudo);\r\n\r\n    sb.Replace("#mensagem#", $"O registro \\"{id}\\" foi exclu\xeddo com sucesso!");\r\n\r\n    string conteudoString = sb.ToString();\r\n\r\n    return context.Response.WriteAsync(conteudoString);\r\n}\n'})}),"\n",(0,a.jsx)(n.h4,{id:"html-3",children:"HTML"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\r\n<html lang="pt-br">\r\n<head>\r\n    <meta charset="utf-8" />\r\n    <title>Exclus\xe3o de Fabricante - Gest\xe3o de Equipamentos</title>\r\n</head>\r\n<body>\r\n    <h1>Gest\xe3o de Equipamentos</h1>\r\n\r\n    <hr />\r\n\r\n    <a href="/">P\xe1gina Inicial</a> /\r\n    <a href="/fabricantes/cadastrar">Cadastrar Novo Fabricante</a> /\r\n    <a href="/fabricantes/visualizar">Visualizar Fabricantes</a>\r\n\r\n    <hr />\r\n\r\n    <h3>Exclus\xe3o de Fabricante</h3>\r\n\r\n    <p>Tem certeza que deseja excluir o registro #fabricante#?</p>\r\n\r\n    <form action="/fabricantes/excluir/#id#" method="post">\r\n        <button type="submit">Gravar</button>\r\n        <a type="button" href="/fabricantes/visualizar">Voltar</a>\r\n    </form>\r\n</body>\r\n</html>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"programcs-completo",children:"Program.cs Completo"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:'static void Main(string[] args)\r\n{\r\n    WebApplicationBuilder builder = WebApplication.CreateBuilder(args);\r\n\r\n    WebApplication app = builder.Build();\r\n\r\n    ContextoDados contextoDados = new ContextoDados(true);\r\n    IRepositorioFabricante repositorioFabricante = new RepositorioFabricanteEmArquivo(contextoDados);\r\n\r\n    if (repositorioFabricante.SelecionarRegistros().Count < 1)\r\n        repositorioFabricante.CadastrarRegistro(new Fabricante("Dell", "contato@dell.com", "21 3222-3322"));\r\n\r\n    app.MapGet("/", PaginaInicial);\r\n\r\n    app.MapGet("/fabricantes/cadastrar", FormularioCadastrarFabricante);\r\n    app.MapPost("/fabricantes/cadastrar", CadastrarFabricante);\r\n\r\n    app.MapGet("/fabricantes/editar/{id:int}", FormularioEditarFabricante);\r\n    app.MapPost("/fabricantes/editar/{id:int}", EditarFabricante);\r\n\r\n    app.MapGet("/fabricantes/excluir/{id:int}", FormularioExcluirFabricante);\r\n    app.MapPost("/fabricantes/excluir/{id:int}", ExcluirFabricante);\r\n\r\n    app.MapGet("/fabricantes/visualizar", VisualizarFabricantes);\r\n\r\n    app.Run();\r\n}\n'})})]})}function u(r={}){const{wrapper:n}={...(0,i.R)(),...r.components};return n?(0,a.jsx)(n,{...r,children:(0,a.jsx)(d,{...r})}):d(r)}},8453:(r,n,e)=>{e.d(n,{R:()=>o,x:()=>s});var t=e(6540);const a={},i=t.createContext(a);function o(r){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof r?r(n):{...n,...r}}),[n,r])}function s(r){let n;return n=r.disableParentContext?"function"==typeof r.components?r.components(a):r.components||a:o(r.components),t.createElement(i.Provider,{value:n},r.children)}}}]);