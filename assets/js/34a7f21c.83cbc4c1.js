"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8282],{5039:(o,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"Cronograma das Aulas/Semana 02/Aula 09/Programa\xe7\xe3o Estuturada, M\xe9todos e Vari\xe1veis Globais","title":"Programa\xe7\xe3o Estuturada, M\xe9todos e Vari\xe1veis Globais","description":"Programa\xe7\xe3o estruturada \xe9 um paradigma que enfatiza a organiza\xe7\xe3o do c\xf3digo por meio de sequ\xeancia, decis\xe3o e repeti\xe7\xe3o. Diferente da programa\xe7\xe3o sequencial, aqui nos concentramos em fun\xe7\xf5es (m\xe9todos) e no fluxo do programa dentro da Main.","source":"@site/docs/Cronograma das Aulas/Semana 02/Aula 09/01. Programa\xe7\xe3o Estuturada, M\xe9todos e Vari\xe1veis Globais.md","sourceDirName":"Cronograma das Aulas/Semana 02/Aula 09","slug":"/Cronograma das Aulas/Semana 02/Aula 09/Programa\xe7\xe3o Estuturada, M\xe9todos e Vari\xe1veis Globais","permalink":"/blog/docs/Cronograma das Aulas/Semana 02/Aula 09/Programa\xe7\xe3o Estuturada, M\xe9todos e Vari\xe1veis Globais","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Cronograma das Aulas/Semana 02/Aula 09/01. Programa\xe7\xe3o Estuturada, M\xe9todos e Vari\xe1veis Globais.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Aula 09","permalink":"/blog/docs/Cronograma das Aulas/Semana 02/Aula 09/"},"next":{"title":"Aula 10","permalink":"/blog/docs/Cronograma das Aulas/Semana 02/Aula 10/"}}');var t=a(4848),r=a(8453);const i={},s=void 0,d={},c=[{value:"Calculadora Estruturada",id:"calculadora-estruturada",level:2},{value:"Vers\xe3o 1: Programa\xe7\xe3o Estruturada com m\xe9todos",id:"vers\xe3o-1-programa\xe7\xe3o-estruturada-com-m\xe9todos",level:3}];function l(o){const e={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...o.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:["Programa\xe7\xe3o estruturada \xe9 um paradigma que enfatiza a organiza\xe7\xe3o do c\xf3digo por meio de ",(0,t.jsx)(e.strong,{children:"sequ\xeancia, decis\xe3o e repeti\xe7\xe3o"}),". Diferente da programa\xe7\xe3o sequencial, aqui nos concentramos em fun\xe7\xf5es (m\xe9todos) e no fluxo do programa dentro da ",(0,t.jsx)(e.code,{children:"Main"}),"."]}),"\n",(0,t.jsxs)(e.p,{children:["Um ",(0,t.jsx)(e.strong,{children:"m\xe9todo"})," (ou fun\xe7\xe3o) \xe9 um bloco de c\xf3digo que executa uma tarefa espec\xedfica. Ele ajuda a dividir o programa em partes menores e reutiliz\xe1veis."]}),"\n",(0,t.jsx)(e.p,{children:"Em C#, um m\xe9todo geralmente segue esta estrutura:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cs",children:"modificadorDeAcesso tipoDeRetorno NomeDoMetodo(tipoDoParametro parametro)\n{\n    // C\xf3digo a ser executado\n    return valor; // (se necess\xe1rio)\n}\n"})}),"\n",(0,t.jsx)(e.p,{children:"Onde:"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"modificadorDeAcesso"}),": Define se outros arquivos poder\xe3o referenciar este m\xe9todo (",(0,t.jsx)(e.code,{children:"private"}),"por padr\xe3o)."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"tipoDeRetorno"}),": Define o que o m\xe9todo devolve (",(0,t.jsx)(e.code,{children:"void"})," se n\xe3o retornar nada)."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"NomeDoMetodo"}),": Nome que identifica o m\xe9todo."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"tipoDoParametro parametro"}),": Entrada opcional para o m\xe9todo."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"return"}),": Retorna um valor (se aplic\xe1vel)."]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"calculadora-estruturada",children:"Calculadora Estruturada"}),"\n",(0,t.jsx)(e.p,{children:"Iremos refatorar nosso c\xf3digo da calculadora para se beneficiar dos paradigmas de programa\xe7\xe3o estruturada."}),"\n",(0,t.jsx)(e.h3,{id:"vers\xe3o-1-programa\xe7\xe3o-estruturada-com-m\xe9todos",children:"Vers\xe3o 1: Programa\xe7\xe3o Estruturada com m\xe9todos"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-cs",children:'static string[] historicoOperacoes = new string[100];\nstatic int contadorHistorico = 0;\n\nstatic void Main(string[] args)\n{\n\twhile (true)\n\t{\n\t\tstring operacao = MostrarMenu();\n\n\t\tif (OpcaoSaidaSelecionada(operacao))\n\t\t\tbreak;\n\t\t\t\n\t\telse if (OpcaoTabuadaSelecionada(operacao))\n\t\t\tExibirTabuada();\n\t\t\n\t\telse if (OpcaoHistoricoSelecionada(operacao))\n\t\t\tExibirHistoricoOperacoes();\n\n\t\telse if (OpcaoInvalida(operacao))\n\t\t\tExibirMensagemErro();\n\n\t\telse\n\t\t\tExibirResultado(RealizarCalculo(operacao));\n\t}\n}\n\nstatic string MostrarMenu()\n{\n\tConsole.Clear();\n\tConsole.WriteLine("--------------------------------");\n\tConsole.WriteLine("Calculadora Tabajara 2025");\n\tConsole.WriteLine("--------------------------------");\n\n\tConsole.WriteLine("1 - Somar");\n\tConsole.WriteLine("2 - Subtrair");\n\tConsole.WriteLine("3 - Multiplica\xe7\xe3o");\n\tConsole.WriteLine("4 - Divis\xe3o");\n\tConsole.WriteLine("5 - Tabuada");\n\tConsole.WriteLine("6 - Hist\xf3rico de Opera\xe7\xf5es");\n\tConsole.WriteLine("S - Sair");\n\n\tstring operacao = Console.ReadLine()!.ToUpper();\n\n\treturn operacao;\n}\n\nstatic bool OpcaoSaidaSelecionada(string opcao)\n{\n\tbool opcaoSaidaSelecionada = opcao == "S";\n\n\treturn opcaoSaidaSelecionada;\n}\n\nstatic bool OpcaoTabuadaSelecionada(string opcao)\n{\n\treturn opcao == "5";\n}\n\nstatic bool OpcaoInvalida(string opcao)\n{\n\tbool opcaoInvalida = opcao != "1" && opcao != "2" && opcao != "3" && opcao != "4" && opcao != "5" && opcao != "6" && opcao != "S";\n\n\treturn opcaoInvalida;\n}\n\nstatic void ExibirMensagemErro()\n{\n\tConsole.WriteLine("Opera\xe7\xe3o inv\xe1lida, tente novamente...");\n\tConsole.ReadLine();\n}\n\nstatic decimal RealizarCalculo(string operacao)\n{\n\tConsole.WriteLine("Digite o primeiro n\xfamero:");\n\n\tdecimal primeiroNumero = Convert.ToDecimal(Console.ReadLine());\n\n\tConsole.WriteLine("Digite o segundo n\xfamero:");\n\n\tdecimal segundoNumero = Convert.ToDecimal(Console.ReadLine());\n\n\tdecimal resultado = 0;\n\n\tswitch (operacao)\n\t{\n\t\tcase "1":\n\t\t\tresultado = primeiroNumero + segundoNumero;\n\t\t\thistoricoOperacoes[contadorHistorico] = $"{primeiroNumero} + {segundoNumero} = {resultado}";\n\t\t\tbreak;\n\n\t\tcase "2":\n\t\t\tresultado = primeiroNumero - segundoNumero;\n\t\t\thistoricoOperacoes[contadorHistorico] = $"{primeiroNumero} - {segundoNumero} = {resultado}";\n\t\t\tbreak;\n\n\t\tcase "3":\n\t\t\tresultado = primeiroNumero * segundoNumero;\n\t\t\thistoricoOperacoes[contadorHistorico] = $"{primeiroNumero} * {segundoNumero} = {resultado}";\n\t\t\tbreak;\n\n\t\tcase "4":\n\t\t\twhile (segundoNumero == 0)\n\t\t\t{\n\t\t\t\tConsole.Write("N\xe3o \xe9 poss\xedvel dividir por 0\\n Digite o segundo n\xfamero novamente -> ");\n\n\t\t\t\tsegundoNumero = Convert.ToDecimal(Console.ReadLine());\n\t\t\t}\n\n\t\t\tresultado = primeiroNumero / segundoNumero;\n\t\t\thistoricoOperacoes[contadorHistorico] = $"{primeiroNumero} / {segundoNumero} = {resultado}";\n\t\t\tbreak;\n\t}\n\t\n\tcontadorHistorico++;\n\n\treturn resultado;\n}\n\nstatic void ExibirResultado(decimal resultado)\n{\n\tConsole.WriteLine("--------------------------------");\n\tConsole.WriteLine("O resultado \xe9: " + resultado.ToString("F2"));\n\tConsole.WriteLine("--------------------------------");\n\n\tConsole.ReadLine();\n}\n\nstatic void ExibirTabuada()\n{\n\tConsole.WriteLine("--------------------------------");\n\tConsole.WriteLine("Tabuada");\n\tConsole.WriteLine("--------------------------------");\n\t\n\tConsole.Write("Digite o n\xfamero: ");\n\tint numeroTabuada = Convert.ToInt32(Console.ReadLine());\n\t\n\tfor (int contador = 1; contador <= 10; contador++)\n\t{\n\t    int resultadoTabuada = numeroTabuada * contador;\n\t\n\t    Console.WriteLine($"{numeroTabuada} x {contador} = {resultadoTabuada}");\n\t}\n\n\tConsole.Write("Aperte ENTER para continuar");\n\tConsole.ReadLine();\n}\n\nstatic void ExibirHistoricoOperacoes()\n{\n\tConsole.WriteLine("--------------------------------");\n\tConsole.WriteLine("Hist\xf3rico de Opera\xe7\xf5es");\n\tConsole.WriteLine("--------------------------------");\n\t\n\tfor (int contador = 0; contador < historicoOperacoes.Length; contador++)\n\t{\n\t    string valorAtual = historicoOperacoes[contador];\n\t\n\t    if (valorAtual != null)\n\t        Console.WriteLine(valorAtual);\n\t}\n\t\n\tConsole.Write("Aperte ENTER para continuar");\n\tConsole.ReadLine();\n}\n'})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.code,{children:"Program.cs"})})]})}function u(o={}){const{wrapper:e}={...(0,r.R)(),...o.components};return e?(0,t.jsx)(e,{...o,children:(0,t.jsx)(l,{...o})}):l(o)}},8453:(o,e,a)=>{a.d(e,{R:()=>i,x:()=>s});var n=a(6540);const t={},r=n.createContext(t);function i(o){const e=n.useContext(r);return n.useMemo((function(){return"function"==typeof o?o(e):{...e,...o}}),[e,o])}function s(o){let e;return e=o.disableParentContext?"function"==typeof o.components?o.components(t):o.components||t:i(o.components),n.createElement(r.Provider,{value:e},o.children)}}}]);