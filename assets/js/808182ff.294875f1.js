"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9088],{142:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Cronograma das Aulas/Semana 11/Aula 51/Controllers do ASP.NET MVC","title":"Controllers do ASP.NET MVC","description":"Introdu\xe7\xe3o","source":"@site/docs/Cronograma das Aulas/Semana 11/Aula 51/01. Controllers do ASP.NET MVC.mdx","sourceDirName":"Cronograma das Aulas/Semana 11/Aula 51","slug":"/Cronograma das Aulas/Semana 11/Aula 51/Controllers do ASP.NET MVC","permalink":"/blog/docs/Cronograma das Aulas/Semana 11/Aula 51/Controllers do ASP.NET MVC","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Aula 50","permalink":"/blog/docs/Cronograma das Aulas/Semana 10/Aula 50/"},"next":{"title":"Views do ASP.NET MVC","permalink":"/blog/docs/Cronograma das Aulas/Semana 11/Aula 51/Views do ASP.NET MVC"}}');var r=o(4848),a=o(8453);const i={},s=void 0,d={},c=[{value:"Introdu\xe7\xe3o",id:"introdu\xe7\xe3o",level:2},{value:"Utilizando Controllers do ASP.NET MVC",id:"utilizando-controllers-do-aspnet-mvc",level:2},{value:"Controlador de Fabricante",id:"controlador-de-fabricante",level:2},{value:"Retorno de HTML com ActionResults",id:"retorno-de-html-com-actionresults",level:3}];function l(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"introdu\xe7\xe3o",children:"Introdu\xe7\xe3o"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cs",children:'static void Main(string[] args)\n{\n\t// criar um servidor web\n\tWebApplicationBuilder builder = WebApplication.CreateBuilder(args);\n\n\tbuilder.Services.AddControllers();\n\n\tWebApplication app = builder.Build();\n\n\t// mapeamento de rotas\n\tapp.MapGet("/", PaginaInicial);\n\n\tapp.MapGet("/fabricantes/cadastrar", ExibirFormularioCadastroFabricante);\n\tapp.MapPost("/fabricantes/cadastrar", CadastrarFabricante);\n\n\tapp.MapGet("/fabricantes/editar/{id:int}", ExibirFormularioEdicaoFabricante);\n\tapp.MapPost("/fabricantes/editar/{id:int}", EditarFabricante);\n\n\tapp.MapGet("/fabricantes/excluir/{id:int}", ExibirFormularioExclusaoFabricante);\n\tapp.MapPost("/fabricantes/excluir/{id:int}", ExcluirFabricante);\n\n\tapp.MapGet("/fabricantes/visualizar", VisualizarFabricantes);\n\n\tapp.MapControllers();\n\n\tapp.Run();\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"No modelo inicial que fizemos:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["O ",(0,r.jsxs)(n.strong,{children:["programa ASP.NET \xe9 respons\xe1vel por mapear cada rota de forma expl\xedcita, dentro do ",(0,r.jsx)(n.code,{children:"Program.cs"})]}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Cada rota (",(0,r.jsx)(n.code,{children:"app.MapGet(...)"}),", ",(0,r.jsx)(n.code,{children:"app.MapPost(...)"}),") recebe uma fun\xe7\xe3o an\xf4nima (",(0,r.jsx)(n.code,{children:"Task"})," ou ",(0,r.jsx)(n.code,{children:"Func<HttpContext, Task>"}),") que acessa diretamente o ",(0,r.jsx)(n.code,{children:"HttpContext"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"A responsabilidade de buscar dados, tratar o HTML, e construir as respostas est\xe1 toda centralizada ali mesmo."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"utilizando-controllers-do-aspnet-mvc",children:"Utilizando Controllers do ASP.NET MVC"}),"\n",(0,r.jsxs)(n.p,{children:["Iremos criar uma nova classe chamada ",(0,r.jsx)(n.code,{children:"ControladorInicial"})," na pasta ",(0,r.jsx)(n.code,{children:"Controllers"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cs",children:'[Route("/")]\npublic class ControladorInicial : Controller\n{\n    [HttpGet]\n    public IActionResult PaginaInicial()\n    {\n        string conteudo = System.IO.File.ReadAllText("Compartilhado/Html/PaginaInicial.html");\n\n        return Content(conteudo, "text/html");\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"C\xf3digo"}),(0,r.jsx)(n.th,{children:"Explica\xe7\xe3o"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'[Route("/")]'})}),(0,r.jsxs)(n.td,{children:["Define que esse controller responder\xe1 \xe0 rota raiz (",(0,r.jsx)(n.code,{children:"/"}),")."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"public class ControladorInicial : Controller"})}),(0,r.jsxs)(n.td,{children:["Herdando de ",(0,r.jsx)(n.code,{children:"Controller"}),", agora temos acesso a m\xe9todos como ",(0,r.jsx)(n.code,{children:"Content()"}),", ",(0,r.jsx)(n.code,{children:"View()"}),", ",(0,r.jsx)(n.code,{children:"Redirect()"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"[HttpGet]"})}),(0,r.jsxs)(n.td,{children:["Esse m\xe9todo ser\xe1 chamado quando algu\xe9m acessar ",(0,r.jsx)(n.code,{children:"GET /"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'Content(conteudo, "text/html")'})}),(0,r.jsx)(n.td,{children:"Retorna o conte\xfado HTML lido diretamente do arquivo."})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["Voc\xea pode ",(0,r.jsxs)(n.strong,{children:["remover o ",(0,r.jsx)(n.code,{children:'app.MapGet("/", PaginaInicial)'})]})," e incluir as linhas ",(0,r.jsx)(n.code,{children:"AddControllers"})," e ",(0,r.jsx)(n.code,{children:"MapControllers"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cs",children:"static void Main(string[] args)\n{\n\t// cria um servidor web\n\tWebApplicationBuilder builder = WebApplication.CreateBuilder(args);\n\n\t// procura controladores no c\xf3digo fonte\n\tbuilder.Services.AddControllers();\n\n\tWebApplication app = builder.Build();\n\n\t// mapeamento de rotas\n\t// rotas de fabricantes\n\n\t// mapeia controladores obtidos para o servidor\n\tapp.MapControllers();\n\n\tapp.Run();\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Agora, mantemos toda a l\xf3gica de apresenta\xe7\xe3o da p\xe1gina inicial isolada no ",(0,r.jsx)(n.code,{children:"ControladorInicial"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"controlador-de-fabricante",children:"Controlador de Fabricante"}),"\n",(0,r.jsxs)(n.p,{children:["Ao migrar para o modelo de ",(0,r.jsx)(n.strong,{children:"Controllers"}),", voc\xea adota o padr\xe3o de arquitetura ",(0,r.jsx)(n.strong,{children:"MVC (Model-View-Controller)"}),", onde Controllers passam a ser classes dedicadas, herdando de ",(0,r.jsx)(n.code,{children:"Controller"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Cada ",(0,r.jsx)(n.strong,{children:"controller agrupa rotas relacionadas a um contexto espec\xedfico"})," (",(0,r.jsx)(n.code,{children:"Fabricante"}),", ",(0,r.jsx)(n.code,{children:"Equipamento"}),", ",(0,r.jsx)(n.code,{children:"Chamado"}),", etc.)."]}),"\n",(0,r.jsxs)(n.li,{children:["As rotas s\xe3o organizadas com ",(0,r.jsxs)(n.strong,{children:["atributos ",(0,r.jsx)(n.code,{children:"[Route]"}),", ",(0,r.jsx)(n.code,{children:"[HttpGet]"}),", ",(0,r.jsx)(n.code,{children:"[HttpPost]"})]}),", sem necessidade de mapear tudo no ",(0,r.jsx)(n.code,{children:"Program.cs"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["O ASP.NET cuida ",(0,r.jsx)(n.strong,{children:"automaticamente do roteamento, do binding de dados e da cria\xe7\xe3o das respostas HTTP"}),", deixando o c\xf3digo mais limpo."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"retorno-de-html-com-actionresults",children:"Retorno de HTML com ActionResults"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cs",children:'[Route("fabricantes")]\npublic class ControladorFabricante : Controller\n{\n    [HttpGet("cadastrar")]\n    public IActionResult ExibirFormularioCadastroFabricante()\n    {\n        string conteudo = System.IO.File.ReadAllText("ModuloFabricante/Html/Cadastrar.html");\n\n        return Content(conteudo, "text/html");\n    }\n\n    [HttpPost("cadastrar")]\n    public IActionResult CadastrarFabricante([FromForm] string nome, [FromForm] string email, [FromForm] string telefone)\n    {\n        ContextoDados contextoDados = new ContextoDados(true);\n        IRepositorioFabricante repositorioFabricante = new RepositorioFabricanteEmArquivo(contextoDados);\n\n        Fabricante novoFabricante = new Fabricante(nome, email, telefone);\n\n        repositorioFabricante.CadastrarRegistro(novoFabricante);\n\n        string conteudo = System.IO.File.ReadAllText("Compartilhado/Html/Notificacao.html");\n\n        StringBuilder sb = new StringBuilder(conteudo);\n        sb.Replace("#mensagem#", $"O registro \\"{novoFabricante.Nome}\\" foi cadastrado com sucesso!");\n\n        return Content(sb.ToString(), "text/html");\n    }\n\n    [HttpGet("editar/{id:int}")]\n    public IActionResult ExibirFormularioEdicaoFabricante(int id)\n    {\n        ContextoDados contextoDados = new ContextoDados(true);\n        IRepositorioFabricante repositorioFabricante = new RepositorioFabricanteEmArquivo(contextoDados);\n\n        Fabricante fabricanteSelecionado = repositorioFabricante.SelecionarRegistroPorId(id);\n\n        string conteudo = System.IO.File.ReadAllText("ModuloFabricante/Html/Editar.html");\n\n        StringBuilder sb = new StringBuilder(conteudo);\n        sb.Replace("#id#", id.ToString());\n        sb.Replace("#nome#", fabricanteSelecionado.Nome);\n        sb.Replace("#email#", fabricanteSelecionado.Email);\n        sb.Replace("#telefone#", fabricanteSelecionado.Telefone);\n\n        return Content(sb.ToString(), "text/html");\n    }\n\n    [HttpPost("editar/{id:int}")]\n    public IActionResult EditarFabricante(int id, [FromForm] string nome, [FromForm] string email, [FromForm] string telefone)\n    {\n        ContextoDados contextoDados = new ContextoDados(true);\n        IRepositorioFabricante repositorioFabricante = new RepositorioFabricanteEmArquivo(contextoDados);\n\n        Fabricante fabricanteAtualizado = new Fabricante(nome, email, telefone);\n\n        repositorioFabricante.EditarRegistro(id, fabricanteAtualizado);\n\n        string conteudo = System.IO.File.ReadAllText("Compartilhado/Html/Notificacao.html");\n\n        StringBuilder sb = new StringBuilder(conteudo);\n        sb.Replace("#mensagem#", $"O registro \\"{fabricanteAtualizado.Nome}\\" foi editado com sucesso!");\n\n        return Content(sb.ToString(), "text/html");\n    }\n\n    [HttpGet("excluir/{id:int}")]\n    public IActionResult ExibirFormularioExclusaoFabricante(int id)\n    {\n        ContextoDados contextoDados = new ContextoDados(true);\n        IRepositorioFabricante repositorioFabricante = new RepositorioFabricanteEmArquivo(contextoDados);\n\n        Fabricante fabricanteSelecionado = repositorioFabricante.SelecionarRegistroPorId(id);\n\n        string conteudo = System.IO.File.ReadAllText("ModuloFabricante/Html/Excluir.html");\n\n        StringBuilder sb = new StringBuilder(conteudo);\n        sb.Replace("#id#", id.ToString());\n        sb.Replace("#fabricante#", fabricanteSelecionado.Nome);\n\n        return Content(sb.ToString(), "text/html");\n    }\n\n    [HttpPost("excluir/{id:int}")]\n    public IActionResult ExcluirFabricante(int id)\n    {\n        ContextoDados contextoDados = new ContextoDados(true);\n        IRepositorioFabricante repositorioFabricante = new RepositorioFabricanteEmArquivo(contextoDados);\n\n        repositorioFabricante.ExcluirRegistro(id);\n\n        string conteudo = System.IO.File.ReadAllText("Compartilhado/Html/Notificacao.html");\n\n        StringBuilder sb = new StringBuilder(conteudo);\n        sb.Replace("#mensagem#", $"O registro foi exclu\xeddo com sucesso!");\n\n        return Content(sb.ToString(), "text/html");\n    }\n\n    [HttpGet("visualizar")]\n    public IActionResult VisualizarFabricantes()\n    {\n        ContextoDados contextoDados = new ContextoDados(true);\n        IRepositorioFabricante repositorioFabricante = new RepositorioFabricanteEmArquivo(contextoDados);\n\n        string conteudo = System.IO.File.ReadAllText("ModuloFabricante/Html/Visualizar.html");\n\n        StringBuilder sb = new StringBuilder(conteudo);\n\n        List<Fabricante> fabricantes = repositorioFabricante.SelecionarRegistros();\n\n        foreach (Fabricante f in fabricantes)\n        {\n            string itemLista = $"<li>{f} / <a href=\\"/fabricantes/editar/{f.Id}\\">Editar</a> / <a href=\\"/fabricantes/excluir/{f.Id}\\">Excluir</a> </li> #fabricante#";\n            sb.Replace("#fabricante#", itemLista);\n        }\n\n        sb.Replace("#fabricante#", "");\n\n        return Content(sb.ToString(), "text/html");\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Agora, o ASP.NET reconhece:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Que essa classe atende rotas que come\xe7am com ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"/fabricantes"})}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Que esse m\xe9todo atende especificamente ao verbo ",(0,r.jsxs)(n.strong,{children:["GET na rota ",(0,r.jsx)(n.code,{children:"/fabricantes/cadastrar"})]}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsxs)(n.strong,{children:["requisi\xe7\xe3o \xe9 automaticamente roteada e os par\xe2metros s\xe3o convertidos (",(0,r.jsx)(n.code,{children:"model binding"}),")"]}),"."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.th,{children:["Antigo (",(0,r.jsx)(n.code,{children:"HttpContext"}),")"]}),(0,r.jsxs)(n.th,{children:["Novo (",(0,r.jsx)(n.code,{children:"Controllers"}),")"]})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:["Mapear rotas manualmente no ",(0,r.jsx)(n.code,{children:"Program.cs"})," com ",(0,r.jsx)(n.code,{children:"app.MapGet(...)"})]}),(0,r.jsxs)(n.td,{children:["Deixar o ASP.NET mapear as rotas automaticamente com ",(0,r.jsx)(n.code,{children:"[Route]"}),", ",(0,r.jsx)(n.code,{children:"[HttpGet]"}),", ",(0,r.jsx)(n.code,{children:"[HttpPost]"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:["Manipular ",(0,r.jsx)(n.code,{children:"HttpContext"})," diretamente"]}),(0,r.jsxs)(n.td,{children:["Usar ",(0,r.jsx)(n.code,{children:"IActionResult"})," e helpers como ",(0,r.jsx)(n.code,{children:"Content"}),", ",(0,r.jsx)(n.code,{children:"View"}),", ",(0,r.jsx)(n.code,{children:"Redirect"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:["Dados enviados pelo usu\xe1rio recuperados com ",(0,r.jsx)(n.code,{children:'context.Request.Form["campo"]'})]}),(0,r.jsxs)(n.td,{children:["ASP.NET faz o binding autom\xe1tico com ",(0,r.jsx)(n.code,{children:"[FromForm]"}),", ",(0,r.jsx)(n.code,{children:"[FromRoute]"}),", ",(0,r.jsx)(n.code,{children:"[FromQuery]"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Dif\xedcil reutiliza\xe7\xe3o e testes"}),(0,r.jsx)(n.td,{children:"Controllers isolados, f\xe1ceis de testar e evoluir"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:["C\xf3digo monol\xedtico e centralizado no ",(0,r.jsx)(n.code,{children:"Program.cs"})]}),(0,r.jsx)(n.td,{children:"C\xf3digo organizado em controllers separados"})]})]})]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>s});var t=o(6540);const r={},a=t.createContext(r);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);